{"version":3,"sources":["components/Algorithms/Extra/Common.js","components/DrawGraph/NodeDrawn.jsx","components/DrawGraph/EdgeDrawn.jsx","components/DrawGraph/EditWeight.jsx","components/DrawGraph/Instructions.jsx","components/DrawGraph/ExportImport.jsx","components/DrawGraph/Buttons/BackButton.jsx","components/DrawGraph/Buttons/FinishButton.jsx","components/DrawGraph/Buttons/WeightedEdgesToggle.jsx","components/DrawGraph/Buttons/DirectedEdgesToggle.jsx","components/DrawGraph/Buttons/NewButton.jsx","components/DrawGraph/TemporalEdge.jsx","components/DrawGraph/DrawGraph.jsx","components/Canvas/Node.jsx","components/Canvas/Edge.jsx","components/Menu/SubMenu.jsx","components/Menu/Menu.jsx","components/Footer.jsx","components/Algorithms/Extra/NodeSelector.jsx","components/Algorithms/Elementary/BfsPseudocode.jsx","components/Algorithms/Elementary/Bfs.js","components/Algorithms/Elementary/BfsController.jsx","components/Algorithms/AlgorithmsController.jsx","components/Main.jsx","App.jsx","reportWebVitals.js","index.jsx"],"names":["exports","delay","ms","a","Promise","res","setTimeout","getAdj","topNode","edges","isDirected","adj","i","push","length","Number","u","v","NodeDrawn","position","id","currentNode","handleClick","isDragged","transform","x","y","onMouseDown","e","stopPropagation","className","style","cursor","r","fill","stroke","strokeWidth","EdgeDrawn","edge","currentEdge","isWeighted","isCurved","weight","w","alfa","Math","atan2","y2","y1","x2","x1","PI","sqrt","centerX","centerY","isRight","rotateTextAngle","translateTextDistance","round","log10","abs","bezierX","min","sin","bezierY","cos","textPosX","textPosY","liftDistance","t","tempX","tempY","angle","onDoubleClick","d","EditWeight","setCurrentEdge","handleSubmit","newWeight","useRef","useEffect","current","focus","onSubmit","preventDefault","value","type","ref","autoFocus","fontSize","marginTop","color","Instructions","ExportImport","graphData","setGraph","useState","copyAlertOpen","setCopyAlertOpen","useReducer","st","showImport","setShowImport","importText","setImportText","onClick","navigator","clipboard","writeText","JSON","stringify","readOnly","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","open","onClose","message","borderRadius","onChange","target","parse","Back","close","FinishButton","finish","WeightedEdgesToggle","setIsWeighted","Switch","checked","DirectedEdgesToggle","setIsDirected","NewButton","resetGraph","TemporalEdge","Alert","props","elevation","variant","dataReducer","state","event","name","nodes","node","undefined","topEdge","Error","DrawGraph","sendGraph","currentGraph","blankGraph","updateGraphData","setCurrentNode","openError","setOpenError","errorMessage","setErrorMessage","edgeVector","setEdgeVector","showEditWeight","setShowEditWeight","deleteEdge","handleClickEdge","clicks","dragTimeoutId","isDragging","setIsDragging","handleClickNode","clear","first","second","findEdge","createEdge","graph","Object","values","find","posX","posY","nativeEvent","offsetX","offsetY","onMouseMove","onMouseUp","clearTimeout","onKeyDown","code","entries","forEach","element","key","tabIndex","map","idx","evt","reason","severity","ret","hasDoubleEdge","Node","highlight","Edge","SubMenu","title","list","setCurrentAlgorithm","toggleOpen","item","Menu","algorithms","Footer","window","useStyles","makeStyles","theme","formControl","margin","spacing","minWidth","maxWidth","select","borderColor","icon","MenuProps","PaperProps","maxHeight","width","NodeSelector","source","setSource","classes","FormControl","InputLabel","Select","label","inputProps","MenuItem","BfsPseudocode","focusCodeLine","backgroundColor","require","vizNode","vizEdge","setFocusCodeLine","D","Q","MAX_VALUE","shift","BFSController","currentAlgorithm","resetViz","Bfs","keys","AlgorithmsController","getAlgorithm","vizDataReducer","highlightId","Main","showDrawGraph","setShowDrawGraph","setGraphData","blankVizData","vizData","updateVizData","findEdgeId","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.79905357.chunk.js","sourcesContent":["exports.delay = async (ms) => new Promise((res) => setTimeout(res, ms));\n\nexports.getAdj = (topNode, edges, isDirected) => {\n  const adj = [];\n  for (let i = 0; i < topNode; i++) {\n    adj.push([]);\n  }\n  for (let i = 0; i < edges.length; i++) {\n    adj[Number(edges[i].u)].push(Number(edges[i].v));\n    if (!isDirected) adj[Number(edges[i].v)].push(Number(edges[i].u));\n  }\n  return adj;\n};\n","import React from 'react';\n\nexport default function NodeDrawn({ position, id, currentNode, handleClick, isDragged }) {\n  return (\n    <g\n      transform={`translate(${position.x},${position.y})`}\n      onMouseDown={(e) => {\n        e.stopPropagation();\n        handleClick(id);\n      }}\n      className='node'\n      style={{ cursor: `${isDragged ? 'move' : ''}` }}\n    >\n      <circle r='20' fill={currentNode === id ? '#DBE2EF' : 'white'} stroke='black' strokeWidth='4px'></circle>\n      <text x={-4.5 * (1 + (id > 9))} className='unselectable' y='5' fill='black'>\n        {Number(id)}\n      </text>\n    </g>\n  );\n}\n","import React from 'react';\n\nexport default function EdgeDrawn({ id, edge, position, currentEdge, handleClick, isWeighted, isDirected, isCurved }) {\n  const weight = edge.w;\n  const alfa = (Math.atan2(position.y2 - position.y1, position.x2 - position.x1) * 180) / Math.PI;\n  const length = Math.sqrt((position.x1 - position.x2) ** 2 + (position.y1 - position.y2) ** 2);\n  const centerX = (position.x1 + position.x2) / 2;\n  const centerY = 5 + (position.y1 + position.y2) / 2;\n  const isRight = position.x2 > position.x1;\n  const rotateTextAngle = alfa - 180 * !isRight;\n  const translateTextDistance = weight === '' ? 0 : -4.5 * Math.round(Math.log10(Math.abs(weight) + 1) + 1);\n  const bezierX =\n    centerX + (edge.u < edge.v ? 1 : -1) * ((isRight ? 1 : -1) * Math.min(length / 4, 50) * Math.sin((alfa * Math.PI) / 180));\n  const bezierY =\n    centerY + (edge.u < edge.v ? 1 : -1) * ((!isRight ? 1 : -1) * Math.min(length / 4, 50) * Math.cos((alfa * Math.PI) / 180));\n  const textPosX = isCurved ? 0.25 * position.x1 + 0.5 * bezierX + 0.25 * position.x2 : centerX;\n  const textPosY = isCurved ? 0.25 * position.y1 + 0.5 * bezierY + 0.25 * position.y2 : centerY;\n  const liftDistance = isCurved && edge.u > edge.v ? 20 : -10;\n  const t = 0.8;\n  const tempX = (1 - t) ** 2 * position.x1 + 2 * (1 - t) * t * bezierX + t ** 2 * position.x2;\n  const tempY = (1 - t) ** 2 * position.y1 + 2 * (1 - t) * t * bezierY + t ** 2 * position.y2;\n  const angle = (Math.atan2(position.y2 - tempY, position.x2 - tempX) * 180) / Math.PI;\n  return (\n    <g\n      onMouseDown={(e) => {\n        e.stopPropagation();\n        handleClick(id, 'single');\n      }}\n      onDoubleClick={(e) => {\n        e.stopPropagation();\n        handleClick(id, 'double');\n      }}\n      className='edge'\n    >\n      {/* Straight lines */}\n      {!isCurved && (\n        <>\n          <line x1={position.x1} y1={position.y1} x2={position.x2} y2={position.y2} stroke='rgba(0,0,0,0)' strokeWidth='15px' />\n          <line\n            x1={position.x1}\n            y1={position.y1}\n            x2={position.x2}\n            y2={position.y2}\n            stroke={currentEdge && currentEdge === id ? '#3F72AF' : 'black'}\n            strokeWidth='3px'\n          />\n        </>\n      )}\n      {/* Curved lines  */}\n      {isCurved && (\n        <>\n          <path\n            d={`M ${position.x1} ${position.y1} Q ${bezierX} ${bezierY} ${position.x2} ${position.y2}`}\n            stroke='rgba(0,0,0,0)'\n            strokeWidth='15px'\n            fill='transparent'\n          />\n          <path\n            d={`M ${position.x1} ${position.y1} Q ${bezierX} ${bezierY} ${position.x2} ${position.y2}`}\n            stroke={currentEdge && currentEdge === id ? '#3F72AF' : 'black'}\n            strokeWidth='3px'\n            fill='transparent'\n          />\n        </>\n      )}\n      {isWeighted && (\n        <text\n          x={textPosX}\n          y={textPosY}\n          className='unselectable'\n          fill={currentEdge && currentEdge.id === id ? '#3F72AF' : 'black'}\n          transform={`rotate(${rotateTextAngle} ${textPosX} ${textPosY}) \n          translate(${translateTextDistance} ${liftDistance})`}\n        >\n          {weight}\n        </text>\n      )}\n      {isDirected && (\n        <path\n          d={`M ${position.x2} ${position.y2} L ${position.x2 + 6} ${position.y2 + 20} \n          L ${position.x2 - 6} ${position.y2 + 20} Z`}\n          transform={`rotate(${(isCurved ? angle : alfa) + 90} ${position.x2} ${position.y2}) translate(0 18)`}\n          fill={currentEdge && currentEdge === id ? '#3F72AF' : 'black'}\n        />\n      )}\n    </g>\n  );\n}\n","import React, { useRef, useEffect } from 'react';\nimport ArrowForwardIcon from '@material-ui/icons/ArrowForward';\n\nexport default function EditWeight({ currentEdge, setCurrentEdge, handleSubmit }) {\n  const newWeight = useRef();\n  useEffect(() => {\n    if (currentEdge && newWeight.current) newWeight.current.focus();\n  }, [currentEdge]);\n  return (\n    <form\n      className='edit-weight-form'\n      onSubmit={(e) => {\n        e.preventDefault();\n        if (newWeight.current.value === '') return;\n        handleSubmit(currentEdge, newWeight.current.value);\n        setCurrentEdge(null);\n      }}\n    >\n      <input type='number' ref={newWeight} autoFocus />\n      <button type='submit'>\n        <ArrowForwardIcon fontSize='inherit' style={{ marginTop: '2px', color: 'white' }} />\n      </button>\n    </form>\n  );\n}\n","import React from 'react';\n\nexport default function Instructions() {\n  return (\n    <ul className='instructions'>\n      <h2>Instructions</h2>\n      <li>Click in an empty space to create a node</li>\n      <li>Click a node and then click another to create an edge</li>\n      <li>Drag nodes by pressing and releasing</li>\n      <li>Click a node or an edge and then press \"Delete\" to remove them</li>\n      <li>Double click an edge to change its weight (if weights are activated)</li>\n      <li>Copy the export data and keep it, later on you can paste it into the import box and recover your graph</li>\n    </ul>\n  );\n}\n","import React, { useState, useReducer } from 'react';\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\n\nexport default function ExportImport({ graphData, setGraph }) {\n  const [copyAlertOpen, setCopyAlertOpen] = useState(false);\n  const [showImport, setShowImport] = useReducer((st) => !st, true);\n  const [importText, setImportText] = useState('');\n  return (\n    <div className='import-export'>\n      <div className='export-name' onClick={() => setShowImport()}>\n        {showImport ? <ArrowDropDownIcon /> : <CheckCircleIcon style={{ fontSize: '1.2rem' }} />}\n        <h2>Export</h2>\n      </div>\n      {!showImport && (\n        <div className='export-box'>\n          <FileCopyIcon\n            className='copy-icon'\n            onClick={() => {\n              navigator.clipboard.writeText(JSON.stringify(graphData, null, '\\t'));\n              setCopyAlertOpen(true);\n            }}\n          />\n          <textarea value={JSON.stringify(graphData, null, '\\t')} readOnly />\n          <Snackbar\n            anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n            autoHideDuration={500}\n            open={copyAlertOpen}\n            onClose={() => setCopyAlertOpen(false)}\n            message='Copied to clipboard!'\n          />\n        </div>\n      )}\n      <div\n        className='import-name'\n        onClick={() => setShowImport()}\n        style={{ borderRadius: `${showImport ? '0' : '0 0 5px 5px'}` }}\n      >\n        {showImport ? <CheckCircleIcon style={{ fontSize: '1.2rem' }} /> : <ArrowDropDownIcon />}\n        <h2>Import</h2>\n      </div>\n      {showImport && (\n        <div className='import-box'>\n          <textarea value={importText} onChange={(e) => setImportText(e.target.value)} />\n        </div>\n      )}\n      {showImport && (\n        <div className='import-button' onClick={() => setGraph(JSON.parse(importText))}>\n          Submit\n        </div>\n      )}\n    </div>\n  );\n}\n","import React from 'react';\nimport BackspaceIcon from '@material-ui/icons/Backspace';\n\nexport default function Back({ close }) {\n  return (\n    <div className='draw-graph-button' onClick={close}>\n      <BackspaceIcon fontSize='inherit' />\n      <h3>Back</h3>\n    </div>\n  );\n}\n","import React from 'react';\n\nexport default function FinishButton({ finish }) {\n  return (\n    <div className='draw-graph-button' onClick={finish}>\n      <h3>Finish</h3>\n    </div>\n  );\n}\n","import React from 'react';\nimport Switch from '@material-ui/core/Switch';\n\nexport default function WeightedEdgesToggle({ isWeighted, setIsWeighted }) {\n  return (\n    <div className='draw-graph-checkbox grid-left'>\n      <h3>Weighted edges</h3>\n      <Switch\n        checked={isWeighted}\n        onChange={(e) => {\n          setIsWeighted(e.target.checked);\n        }}\n        color='secondary'\n      />\n    </div>\n  );\n}\n","import React from 'react';\nimport Switch from '@material-ui/core/Switch';\n\nexport default function DirectedEdgesToggle({ isDirected, setIsDirected }) {\n  return (\n    <div className='draw-graph-checkbox grid-right'>\n      <h3>Directed edges</h3>\n      <Switch\n        checked={isDirected}\n        onChange={(e) => {\n          setIsDirected(e.target.checked);\n        }}\n        color='secondary'\n      />\n    </div>\n  );\n}\n","import React from 'react';\nimport RestoreIcon from '@material-ui/icons/Restore';\n\nexport default function NewButton({ resetGraph }) {\n  return (\n    <div className='draw-graph-button' onClick={resetGraph}>\n      <h3>New</h3>\n      <RestoreIcon fontSize='inherit' />\n    </div>\n  );\n}\n","import React from 'react';\n\nexport default function TemporalEdge({ x1, y1, x2, y2 }) {\n  const alfa = (Math.atan2(y2 - y1, x2 - x1) * 180) / Math.PI;\n  return (\n    <g>\n      <line x1={x1} y1={y1} x2={x2} y2={y2} stroke='black' strokeWidth='3px' />\n      <path\n        d={`M ${x2} ${y2} L ${x2 + 6} ${y2 + 20} \n          L ${x2 - 6} ${y2 + 20} Z`}\n        transform={`rotate(${alfa + 90} ${x2} ${y2})`}\n      />\n    </g>\n  );\n}\n","import React, { useState, useReducer, useRef, useEffect } from 'react';\nimport NodeDrawn from './NodeDrawn';\nimport EdgeDrawn from './EdgeDrawn';\nimport EditWeight from './EditWeight';\nimport Instructions from './Instructions';\nimport ExportImport from './ExportImport';\nimport BackButton from './Buttons/BackButton';\nimport FinishButton from './Buttons/FinishButton';\nimport WeightedEdgesToggle from './Buttons/WeightedEdgesToggle';\nimport DirectedEdgesToggle from './Buttons/DirectedEdgesToggle';\nimport NewButton from './Buttons/NewButton';\nimport TemporalEdge from './TemporalEdge';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport './DrawGraph.css';\nimport '../extra/Extra.css';\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant='filled' {...props} />;\n}\n\nfunction dataReducer(state, event) {\n  switch (event.name) {\n    case 'add-node':\n      return {\n        ...state,\n        nodes: { ...state.nodes, [event.value.id ?? state.topNode]: event.value.node },\n        topNode: state.topNode + (event.value.id === undefined ? 1 : 0),\n      };\n    case 'add-edge':\n      return {\n        ...state,\n        edges: { ...state.edges, [event.value.id ?? state.topEdge]: event.value.edge },\n        topEdge: state.topEdge + (event.value.id === undefined ? 1 : 0),\n      };\n    case 'delete-node':\n      delete state.nodes[event.value];\n      return state;\n    case 'edit-edge':\n      state.edges[event.value.id].w = event.value.weight;\n      return state;\n    case 'delete-edge':\n      delete state.edges[event.value];\n      return state;\n    case 'set-graph':\n      return event.value;\n    case 'set-isWeighted':\n      return { ...state, isWeighted: event.value };\n    case 'set-isDirected':\n      return { ...state, isDirected: event.value };\n    default:\n      throw new Error();\n  }\n}\nexport default function DrawGraph({ close, sendGraph, currentGraph }) {\n  const blankGraph = { topNode: 0, topEdge: 0, isWeighted: false, isDirected: false, nodes: {}, edges: {} };\n  const [graphData, updateGraphData] = useReducer(dataReducer, blankGraph);\n  const [currentNode, setCurrentNode] = useState(null);\n  const [currentEdge, setCurrentEdge] = useState(null);\n  //Error states\n  const [openError, setOpenError] = useState(false);\n  const [errorMessage, setErrorMessage] = useState('');\n\n  //Vector to draw temporary line\n  const [edgeVector, setEdgeVector] = useState({ x: 0, y: 0 });\n\n  //Update initially the graph\n  useEffect(() => {\n    setGraph(currentGraph);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  //State to open and close editWeight\n  const [showEditWeight, setShowEditWeight] = useState(false);\n  useEffect(() => {\n    if (currentEdge === null) setShowEditWeight(false);\n  }, [currentEdge]);\n\n  function createNode(posX, posY) {\n    updateGraphData({\n      name: 'add-node',\n      value: { node: { x: posX, y: posY } },\n    });\n  }\n  function createEdge(first, second) {\n    if (first === second) return;\n    //If user tries to add edge to u->v and it already exists\n    if (findEdge(first, second)) {\n      setErrorMessage('Edge already exists!');\n      setOpenError(true);\n      return;\n    }\n    //If user tries to add edge u->v but v->u already exists and is not directed\n    if (!graphData.isDirected && findEdge(second, first)) {\n      setErrorMessage('Graph needs to be directed to add double edges!');\n      setOpenError(true);\n      return;\n    }\n    updateGraphData({\n      name: 'add-edge',\n      value: { edge: { u: first, v: second, w: '1' } },\n    });\n  }\n  function deleteNode(id) {\n    Object.entries(graphData.edges).forEach((element) => {\n      const key = element[0];\n      const edge = element[1];\n      if (edge.u === id || edge.v === id) deleteEdge(key);\n    });\n    updateGraphData({\n      name: 'delete-node',\n      value: id,\n    });\n  }\n  function deleteEdge(id) {\n    updateGraphData({\n      name: 'delete-edge',\n      value: id,\n    });\n  }\n  function handleClickEdge(id, clicks) {\n    setCurrentEdge(id);\n    setCurrentNode(null);\n    if (clicks === 'double') {\n      setShowEditWeight(true);\n    }\n  }\n  // Drag and drop functionality\n  const dragTimeoutId = useRef('');\n  const [isDragging, setIsDragging] = useState(false);\n\n  function handleMouseUpNode() {\n    if (isDragging) {\n      DropNode();\n    } else {\n      clearTimeout(dragTimeoutId.current);\n    }\n  }\n  function handleClickNode(id) {\n    if (currentNode == null) {\n      clear();\n      setCurrentNode(id);\n      dragTimeoutId.current = setTimeout(() => {\n        setIsDragging(true);\n      }, 100);\n    } else {\n      createEdge(currentNode, id);\n      setCurrentNode(null);\n    }\n  }\n  function DragNode(posX, posY) {\n    updateGraphData({\n      name: 'add-node',\n      value: { id: currentNode, node: { x: posX, y: posY } },\n    });\n  }\n  function DropNode() {\n    setCurrentNode(null);\n    setIsDragging(false);\n  }\n  function editWeight(id, weight) {\n    updateGraphData({\n      name: 'edit-edge',\n      value: { id, weight },\n    });\n  }\n  function clear() {\n    setCurrentNode(null);\n    setCurrentEdge(null);\n  }\n  function setGraph(graph) {\n    updateGraphData({\n      name: 'set-graph',\n      value: graph,\n    });\n  }\n  function hasDoubleEdge() {\n    let ret = false;\n    Object.values(graphData.edges).forEach(({ u, v }) => {\n      if (findEdge(u, v) && findEdge(v, u)) ret = true;\n    });\n    return ret;\n  }\n  function findEdge(u, v) {\n    return Object.values(graphData.edges).find((edge) => edge.u === u && edge.v === v);\n  }\n  return (\n    <div className='popup-out'>\n      <div className='draw-graph-container popup-in'>\n        <Instructions />\n        <svg\n          className='draw-graph'\n          onMouseDown={(event) => {\n            if (currentNode == null && currentEdge == null) createNode(event.nativeEvent.offsetX, event.nativeEvent.offsetY);\n            else clear();\n          }}\n          onMouseMove={(event) => {\n            if (isDragging) {\n              DragNode(event.nativeEvent.offsetX, event.nativeEvent.offsetY);\n            } else {\n              setEdgeVector({\n                x: event.nativeEvent.offsetX,\n                y: event.nativeEvent.offsetY,\n              });\n            }\n          }}\n          onMouseUp={handleMouseUpNode}\n          onKeyDown={(event) => {\n            if (event.code === 'Escape') {\n              setCurrentNode(null);\n              setCurrentEdge(null);\n            }\n            if (event.code === 'Delete') {\n              if (currentEdge != null) {\n                deleteEdge(currentEdge);\n              }\n              if (currentNode != null) deleteNode(currentNode);\n              setCurrentNode(null);\n              setCurrentEdge(null);\n            }\n          }}\n          tabIndex='0'\n        >\n          {currentNode != null && isDragging === false && (\n            <TemporalEdge\n              x1={graphData.nodes[currentNode].x}\n              y1={graphData.nodes[currentNode].y}\n              x2={edgeVector.x}\n              y2={edgeVector.y}\n            />\n          )}\n          {Object.entries(graphData.edges).map((element) => {\n            const idx = element[0];\n            const edge = element[1];\n            return (\n              <EdgeDrawn\n                key={idx}\n                id={idx}\n                edge={edge}\n                currentEdge={currentEdge}\n                position={{\n                  x1: graphData.nodes[edge.u].x,\n                  y1: graphData.nodes[edge.u].y,\n                  x2: graphData.nodes[edge.v].x,\n                  y2: graphData.nodes[edge.v].y,\n                }}\n                setCurrentEdge={setCurrentEdge}\n                handleClick={handleClickEdge}\n                isWeighted={graphData.isWeighted}\n                isDirected={graphData.isDirected}\n                isCurved={findEdge(edge.v, edge.u) !== undefined}\n              />\n            );\n          })}\n          {Object.entries(graphData.nodes).map((element) => {\n            const idx = element[0];\n            const node = element[1];\n            return (\n              <NodeDrawn\n                key={idx}\n                id={idx}\n                position={node}\n                handleClick={handleClickNode}\n                currentNode={currentNode}\n                isDragged={isDragging && idx === currentNode}\n              />\n            );\n          })}\n        </svg>\n        <Snackbar\n          open={openError}\n          autoHideDuration={2500}\n          onClose={(evt, reason) => {\n            if (reason === 'clickaway') return;\n            setOpenError(false);\n          }}\n        >\n          <Alert\n            onClose={(evt, reason) => {\n              if (reason === 'clickaway') return;\n              setOpenError(false);\n            }}\n            severity='error'\n          >\n            {errorMessage}\n          </Alert>\n        </Snackbar>\n        {showEditWeight && graphData.isWeighted && (\n          <EditWeight currentEdge={currentEdge} setCurrentEdge={setCurrentEdge} handleSubmit={editWeight} />\n        )}\n        <ExportImport graphData={graphData} setGraph={setGraph} />\n        <BackButton close={close} />\n        <WeightedEdgesToggle\n          isWeighted={graphData.isWeighted}\n          setIsWeighted={(checked) => updateGraphData({ name: 'set-isWeighted', value: checked })}\n        />\n        <FinishButton\n          finish={() => {\n            sendGraph(graphData);\n            close();\n          }}\n        />\n        <DirectedEdgesToggle\n          isDirected={graphData.isDirected}\n          setIsDirected={(checked) => {\n            //If it has double edge throw error when trying to change to undirected\n            if (hasDoubleEdge() && checked === false) {\n              setErrorMessage(\"There is a double edge, graph can't be undirected until double edges are removed\");\n              setOpenError(true);\n              return;\n            }\n            updateGraphData({ name: 'set-isDirected', value: checked });\n          }}\n        />\n        <NewButton resetGraph={() => setGraph(blankGraph)} />\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\n\nexport default function Node({ position, id, highlight }) {\n  function color() {\n    switch (highlight) {\n      case 1:\n        return '#39A2DB';\n      case 2:\n        return 'yellow';\n      default:\n        return 'white';\n    }\n  }\n  return (\n    <g transform={`translate(${position.x},${position.y})`}>\n      <circle r='20' fill={color()} stroke='black' strokeWidth='4px'></circle>\n      <text x={-4.5 * (1 + (id > 9))} className='unselectable' y='5' fill='black'>\n        {Number(id)}\n      </text>\n    </g>\n  );\n}\n","import React from 'react';\n\nexport default function Edge({ id, edge, position, isWeighted, isDirected, isCurved, highlight }) {\n  const weight = edge.w;\n  const alfa = (Math.atan2(position.y2 - position.y1, position.x2 - position.x1) * 180) / Math.PI;\n  const length = Math.sqrt((position.x1 - position.x2) ** 2 + (position.y1 - position.y2) ** 2);\n  const centerX = (position.x1 + position.x2) / 2;\n  const centerY = 5 + (position.y1 + position.y2) / 2;\n  const isRight = position.x2 > position.x1;\n  const rotateTextAngle = alfa - 180 * !isRight;\n  const translateTextDistance = weight === '' ? 0 : -4.5 * Math.round(Math.log10(Math.abs(weight) + 1) + 1);\n  const bezierX =\n    centerX + (edge.u < edge.v ? 1 : -1) * ((isRight ? 1 : -1) * Math.min(length / 4, 50) * Math.sin((alfa * Math.PI) / 180));\n  const bezierY =\n    centerY + (edge.u < edge.v ? 1 : -1) * ((!isRight ? 1 : -1) * Math.min(length / 4, 50) * Math.cos((alfa * Math.PI) / 180));\n  const textPosX = isCurved ? 0.25 * position.x1 + 0.5 * bezierX + 0.25 * position.x2 : centerX;\n  const textPosY = isCurved ? 0.25 * position.y1 + 0.5 * bezierY + 0.25 * position.y2 : centerY;\n  const liftDistance = isCurved && edge.u > edge.v ? 20 : -10;\n  const t = 0.8;\n  const tempX = (1 - t) ** 2 * position.x1 + 2 * (1 - t) * t * bezierX + t ** 2 * position.x2;\n  const tempY = (1 - t) ** 2 * position.y1 + 2 * (1 - t) * t * bezierY + t ** 2 * position.y2;\n  const angle = (Math.atan2(position.y2 - tempY, position.x2 - tempX) * 180) / Math.PI;\n  function color() {\n    switch (highlight) {\n      case 1:\n        return '#39A2DB';\n      case 2:\n        return 'yellow';\n      default:\n        return 'black';\n    }\n  }\n  return (\n    <g>\n      {/* Straight lines */}\n      {!isCurved && (\n        <>\n          <line x1={position.x1} y1={position.y1} x2={position.x2} y2={position.y2} stroke='rgba(0,0,0,0)' strokeWidth='15px' />\n          <line x1={position.x1} y1={position.y1} x2={position.x2} y2={position.y2} stroke={color()} strokeWidth='3px' />\n        </>\n      )}\n      {/* Curved lines  */}\n      {isCurved && (\n        <>\n          <path\n            d={`M ${position.x1} ${position.y1} Q ${bezierX} ${bezierY} ${position.x2} ${position.y2}`}\n            stroke='rgba(0,0,0,0)'\n            strokeWidth='15px'\n            fill='transparent'\n          />\n          <path\n            d={`M ${position.x1} ${position.y1} Q ${bezierX} ${bezierY} ${position.x2} ${position.y2}`}\n            stroke={color()}\n            strokeWidth='3px'\n            fill='transparent'\n          />\n        </>\n      )}\n      {isWeighted && (\n        <text\n          x={textPosX}\n          y={textPosY}\n          className='unselectable'\n          fill='black'\n          transform={`rotate(${rotateTextAngle} ${textPosX} ${textPosY}) \n          translate(${translateTextDistance} ${liftDistance})`}\n        >\n          {weight}\n        </text>\n      )}\n      {isDirected && (\n        <path\n          d={`M ${position.x2} ${position.y2} L ${position.x2 + 6} ${position.y2 + 20} \n          L ${position.x2 - 6} ${position.y2 + 20} Z`}\n          transform={`rotate(${(isCurved ? angle : alfa) + 90} ${position.x2} ${position.y2}) translate(0 18)`}\n          fill={color()}\n        />\n      )}\n    </g>\n  );\n}\n","import React, { useReducer } from 'react';\nimport ArrowRightIcon from '@material-ui/icons/ArrowRight';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\n\nexport default function SubMenu({ title, list, setCurrentAlgorithm }) {\n  const [open, toggleOpen] = useReducer((st) => !st, false);\n  return (\n    <div className='submenu' onClick={toggleOpen}>\n      <div className='submenu-title'>\n        <h3>{title}</h3>\n        {open ? <ArrowDropDownIcon style={{ fontSize: '1.5rem' }} /> : <ArrowRightIcon style={{ fontSize: '1.5rem' }} />}\n      </div>\n      {open && (\n        <div className='submenu-list'>\n          {list.map((item, id) => (\n            <h4\n              key={id}\n              className='submenu-item'\n              onClick={(e) => {\n                e.stopPropagation();\n                setCurrentAlgorithm(item);\n              }}\n            >\n              {item}\n            </h4>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n}\n","import React from 'react';\nimport SubMenu from './SubMenu';\nimport './Menu.css';\n\nexport default function Menu({ setCurrentAlgorithm }) {\n  const algorithms = [\n    ['Elementary Graph Algorithms', ['Breadth-first search', 'Depth-first search', 'Topological sort']],\n    ['Minimum Spanning Trees', ['Kruskal', 'Prim']],\n    ['Single-Source Shortest Paths', ['Breadth-first search', 'Dijkstra’s algorithm ', 'Bellman-Ford algorithm']],\n    ['All-Pairs Shortest Paths', ['Floyd-Warshall algorithm']],\n    ['Maximum Flow', ['Ford-Fulkerson', 'Maximum bipartite matching']],\n  ];\n  return (\n    <div className='menu'>\n      <h2>Algorithms</h2>\n      {/* Elementary Graph Algorithms */}\n      <SubMenu title={algorithms[0][0]} list={algorithms[0][1]} setCurrentAlgorithm={setCurrentAlgorithm} />\n      {/* Minimum Spanning Trees */}\n      <SubMenu title={algorithms[1][0]} list={algorithms[1][1]} setCurrentAlgorithm={setCurrentAlgorithm} />\n      {/* Single-Source Shortest Paths */}\n      <SubMenu title={algorithms[2][0]} list={algorithms[2][1]} setCurrentAlgorithm={setCurrentAlgorithm} />\n      {/* All-Pairs Shortest Paths */}\n      <SubMenu title={algorithms[3][0]} list={algorithms[3][1]} setCurrentAlgorithm={setCurrentAlgorithm} />\n      {/* Maximum Flow */}\n      <SubMenu title={algorithms[4][0]} list={algorithms[4][1]} setCurrentAlgorithm={setCurrentAlgorithm} />\n    </div>\n  );\n}\n","import React from 'react';\nimport LinkedInIcon from '@material-ui/icons/LinkedIn';\nimport GitHubIcon from '@material-ui/icons/GitHub';\n\nexport default function Footer() {\n  return (\n    <div className='footer'>\n      <p>© 2021 Gonzalo Pereira</p>\n      <LinkedInIcon onClick={() => window.open('https://www.linkedin.com/in/gonzalo-pereira-ramirez-8818a5195/')} />\n      <GitHubIcon onClick={() => window.open('https://github.com/GonzaloPereira/graph-visualizer')} />\n    </div>\n  );\n}\n","import React from 'react';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport { makeStyles } from '@material-ui/core/styles';\nconst color = 'white';\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 150,\n    maxWidth: 200,\n  },\n  select: {\n    '&:before': {\n      borderColor: color,\n    },\n    '&:after': {\n      borderColor: color,\n    },\n    '&:hover': {\n      borderColor: color,\n    },\n  },\n  icon: {\n    fill: color,\n  },\n}));\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: 250,\n      width: 150,\n    },\n  },\n};\nexport default function NodeSelector({ nodes, source, setSource }) {\n  const classes = useStyles();\n  const handleChangeSource = (event) => {\n    setSource(event.target.value);\n  };\n  const whiteStyle = { color: 'white' };\n  return (\n    <FormControl className={classes.formControl}>\n      <InputLabel style={whiteStyle}>Source</InputLabel>\n      <Select\n        className={classes.select}\n        value={source}\n        onChange={handleChangeSource}\n        label='Source'\n        MenuProps={MenuProps}\n        inputProps={{ classes: { icon: classes.icon } }}\n        style={{ color: 'white' }}\n      >\n        <MenuItem value=''>\n          <em>None</em>\n        </MenuItem>\n        {nodes.map((node) => (\n          <MenuItem value={node}>{node}</MenuItem>\n        ))}\n      </Select>\n    </FormControl>\n  );\n}\n","import React from 'react';\n\nexport default function BfsPseudocode({ focusCodeLine }) {\n  function highlight(id) {\n    return { backgroundColor: focusCodeLine === id ? '#06121f' : '' };\n  }\n  return (\n    <ol className='pseudocode'>\n      <li className='tab1'>for each vertex u &#8712; G:V &minus; &#123;s&#125;</li>\n      <li className='tab2'>d[u] = &infin;</li>\n      <li className='tab1'>d[s] = 0</li>\n      <li className='tab1' style={highlight(4)}>\n        ENQUEUE(Q,s)\n      </li>\n      <li className='tab1'>while (Q not empty) &#123;</li>\n      <li className='tab2' style={highlight(6)}>\n        u = DEQUEUE(Q)\n      </li>\n      <li className='tab2'>for each v &#8712; G.Adj[u] &#123;</li>\n      <li className='tab3'>if (d[v] == &infin;) &#123;</li>\n      <li className='tab4' style={highlight(9)}>\n        d[v] = d[u] + 1\n      </li>\n      <li className='tab4' style={highlight(9)}>\n        ENQUEUE.(Q,v)\n      </li>\n      <li className='tab3'>&#125;</li>\n      <li className='tab2'>&#125;</li>\n      <li className='tab1'>&#125;</li>\n    </ol>\n  );\n}\n","const { delay, getAdj } = require('../Extra/Common.js');\n\nexport async function Bfs(graphData, source, vizNode, vizEdge, setFocusCodeLine) {\n  const topNode = graphData.topNode;\n  const edges = Object.values(graphData.edges);\n  const isDirected = graphData.isDirected;\n  const adj = getAdj(topNode, edges, isDirected);\n\n  // BFS starts here\n  const D = []; // Array of distances\n  const Q = []; // Queue\n  for (let i = 0; i < topNode; i++) {\n    D.push(Number.MAX_VALUE);\n    adj.push([]);\n  }\n  Q.push(source);\n  D[source] = 0;\n  setFocusCodeLine(4);\n  await delay(500);\n  while (Q.length > 0) {\n    const u = Q[0];\n    Q.shift();\n    vizNode(u, 2);\n    setFocusCodeLine(6);\n    await delay(500);\n    for (let i = 0; i < adj[u].length; i++) {\n      const v = adj[u][i];\n      if (D[u] + 1 < D[v]) {\n        D[v] = D[u] + 1;\n        Q.push(v);\n        vizEdge(u, v, 1);\n        if (!isDirected) vizEdge(v, u, 1);\n        vizNode(v, 1);\n        setFocusCodeLine(9);\n        await delay(500);\n        setFocusCodeLine();\n        await delay(100);\n      }\n    }\n    vizNode(u, 1);\n    setFocusCodeLine();\n    await delay(100);\n  }\n}\n","import React, { useState } from 'react';\nimport NodeSelector from '../Extra/NodeSelector';\nimport BfsPseudocode from './BfsPseudocode';\nimport { Bfs } from './Bfs';\n\nexport default function BFSController({ currentAlgorithm, graphData, vizNode, vizEdge, resetViz }) {\n  const [source, setSource] = useState(0);\n  const [focusCodeLine, setFocusCodeLine] = useState();\n\n  return (\n    <div className='controller'>\n      <h3\n        onClick={() => {\n          resetViz();\n          Bfs(graphData, source, vizNode, vizEdge, setFocusCodeLine);\n        }}\n      >\n        {currentAlgorithm}\n      </h3>\n      <BfsPseudocode focusCodeLine={focusCodeLine} />\n      <NodeSelector nodes={Object.keys(graphData.nodes)} source={source} setSource={setSource} />\n    </div>\n  );\n}\n","import React from 'react';\nimport BfsController from './Elementary/BfsController';\nimport './AlgorithmsController.css';\n\nexport default function AlgorithmsController(props) {\n  function getAlgorithm(currentAlgorithm) {\n    switch (currentAlgorithm) {\n      case 'Breadth-first search':\n        return <BfsController {...props} />;\n      default:\n        return;\n    }\n  }\n  return <div className='algorithm'>{getAlgorithm(props.currentAlgorithm)}</div>;\n}\n","import React, { useState, useReducer } from 'react';\nimport DrawGraph from './DrawGraph/DrawGraph';\nimport Node from './Canvas/Node';\nimport Edge from './Canvas/Edge';\nimport Menu from './Menu/Menu';\nimport Footer from './Footer';\nimport AlgorithmsController from './Algorithms/AlgorithmsController';\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\nimport './Main.css';\n\nfunction vizDataReducer(state, event) {\n  switch (event.name) {\n    case 'node':\n      return { ...state, nodes: { ...state.nodes, [event.value.id]: event.value.highlightId } };\n    case 'edge':\n      return { ...state, edges: { ...state.edges, [event.value.id]: event.value.highlightId } };\n    case 'reset':\n      return event.value;\n    default:\n      throw new Error();\n  }\n}\n\nexport default function Main() {\n  const [showDrawGraph, setShowDrawGraph] = useState(false);\n  const blankGraph = { topNode: 0, topEdge: 0, isWeighted: false, isDirected: false, nodes: {}, edges: {} };\n  const [graphData, setGraphData] = useState(blankGraph);\n  const blankVizData = { nodes: {}, edges: {} };\n  const [vizData, updateVizData] = useReducer(vizDataReducer, blankVizData);\n  const [currentAlgorithm, setCurrentAlgorithm] = useState('');\n\n  function vizNode(id, highlightId) {\n    updateVizData({\n      name: 'node',\n      value: { id: id, highlightId: highlightId },\n    });\n  }\n  function vizEdge(u, v, highlightId) {\n    const edge = findEdgeId(u, v);\n    if (edge !== undefined) {\n      updateVizData({\n        name: 'edge',\n        value: { id: edge, highlightId: highlightId },\n      });\n    }\n  }\n  function resetViz() {\n    updateVizData({\n      name: 'reset',\n      value: blankVizData,\n    });\n  }\n  function findEdgeId(u, v) {\n    return Object.keys(graphData.edges).find(\n      (id) => Number(graphData.edges[id].u) === Number(u) && Number(graphData.edges[id].v) === Number(v)\n    );\n  }\n  return (\n    <>\n      <main>\n        <div className='header'>\n          <h1>Graph Visualizer</h1>\n        </div>\n\n        <Menu setCurrentAlgorithm={setCurrentAlgorithm} />\n        <div className='canvas'>\n          <svg>\n            {Object.entries(graphData.edges).map((element) => {\n              const idx = element[0];\n              const edge = element[1];\n              return (\n                <Edge\n                  key={idx}\n                  id={idx}\n                  edge={edge}\n                  position={{\n                    x1: graphData.nodes[edge.u].x,\n                    y1: graphData.nodes[edge.u].y,\n                    x2: graphData.nodes[edge.v].x,\n                    y2: graphData.nodes[edge.v].y,\n                  }}\n                  isWeighted={graphData.isWeighted}\n                  isDirected={graphData.isDirected}\n                  isCurved={findEdgeId(edge.v, edge.u) !== undefined}\n                  highlight={vizData.edges[idx]}\n                />\n              );\n            })}\n            {Object.entries(graphData.nodes).map((element) => {\n              const idx = element[0];\n              const node = element[1];\n              return <Node key={idx} id={idx} position={node} highlight={vizData.nodes[idx]} />;\n            })}\n          </svg>\n        </div>\n        <AlgorithmsController\n          currentAlgorithm={currentAlgorithm}\n          vizNode={vizNode}\n          vizEdge={vizEdge}\n          graphData={graphData}\n          resetViz={resetViz}\n        />\n        <div className='reproductor'>Reproductor</div>\n        <div className='logdata'>Log Data</div>\n        <div className='draw-graph-area'>\n          <div onClick={() => setShowDrawGraph(true)}>\n            <h2>Draw graph</h2>\n            <ArrowForwardIosIcon style={{ fontSize: '1rem', marginTop: '0.1rem' }} />\n          </div>\n        </div>\n        <Footer />\n      </main>\n      {showDrawGraph && (\n        <DrawGraph\n          currentGraph={graphData}\n          sendGraph={setGraphData}\n          close={() => {\n            setShowDrawGraph(false);\n            resetViz();\n          }}\n        />\n      )}\n    </>\n  );\n}\n","import './App.css';\nimport Main from './components/Main';\nfunction App() {\n  return (\n    <div className='App'>\n      <Main />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}