{"version":3,"sources":["components/DrawGraph/NodeDrawn.jsx","components/DrawGraph/EdgeDrawn.jsx","components/DrawGraph/EditWeight.jsx","components/DrawGraph/Instructions.jsx","components/DrawGraph/ExportImport.jsx","components/DrawGraph/Buttons/BackButton.jsx","components/DrawGraph/Buttons/FinishButton.jsx","components/DrawGraph/Buttons/WeightedEdgesToggle.jsx","components/DrawGraph/Buttons/DirectedEdgesToggle.jsx","components/DrawGraph/Buttons/NewButton.jsx","components/DrawGraph/TemporalEdge.jsx","components/Common/SnackbarAlert.jsx","components/DrawGraph/DrawGraph.jsx","components/Canvas/Node.jsx","components/Canvas/Edge.jsx","components/Menu/SubMenu.jsx","components/Menu/Menu.jsx","components/Footer.jsx","components/Reproductor/SpeedSlider.jsx","components/Reproductor/Reproductor.jsx","components/Algorithms/Extra/NodeSelector.jsx","components/Algorithms/Elementary/BfsPseudocode.jsx","components/Algorithms/Elementary/Bfs.js","components/Algorithms/Elementary/BfsController.jsx","components/Algorithms/AlgorithmsController.jsx","components/DrawGraphButton.jsx","components/LogData/LogData.jsx","components/Main.jsx","App.jsx","reportWebVitals.js","index.jsx","components/Algorithms/Extra/Common.js"],"names":["NodeDrawn","position","id","currentNode","handleClick","isDragged","transform","x","y","onMouseDown","e","stopPropagation","className","style","cursor","r","fill","stroke","strokeWidth","Number","EdgeDrawn","edge","currentEdge","isWeighted","isDirected","isCurved","weight","w","alfa","Math","atan2","y2","y1","x2","x1","PI","length","sqrt","centerX","centerY","isRight","rotateTextAngle","translateTextDistance","round","log10","abs","bezierX","u","v","min","sin","bezierY","cos","textPosX","textPosY","liftDistance","t","tempX","tempY","angle","onDoubleClick","d","EditWeight","setCurrentEdge","handleSubmit","newWeight","useRef","useEffect","current","focus","onSubmit","preventDefault","value","type","ref","autoFocus","fontSize","marginTop","color","Instructions","ExportImport","graphData","setGraph","useState","copyAlertOpen","setCopyAlertOpen","useReducer","st","showImport","setShowImport","importText","setImportText","onClick","navigator","clipboard","writeText","JSON","stringify","readOnly","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","open","onClose","message","borderRadius","onChange","target","parse","Back","close","FinishButton","finish","WeightedEdgesToggle","setIsWeighted","Switch","checked","DirectedEdgesToggle","setIsDirected","NewButton","resetGraph","TemporalEdge","Alert","props","elevation","variant","SnackbarAlert","openError","setOpenError","error","closeSnackbar","evt","reason","severity","dataReducer","state","event","name","nodes","topNode","node","undefined","edges","topEdge","Error","DrawGraph","sendGraph","currentGraph","blankGraph","updateGraphData","setCurrentNode","errorMessage","setErrorMessage","edgeVector","setEdgeVector","showEditWeight","setShowEditWeight","deleteEdge","handleClickEdge","clicks","dragTimeoutId","isDragging","setIsDragging","handleClickNode","clear","setTimeout","first","second","findEdge","createEdge","graph","Object","values","find","posX","posY","nativeEvent","offsetX","offsetY","onMouseMove","onMouseUp","clearTimeout","onKeyDown","code","entries","forEach","element","key","tabIndex","map","idx","ret","hasDoubleEdge","Node","highlight","Edge","SubMenu","title","list","setCurrentAlgorithm","toggleOpen","item","Menu","algorithms","Footer","window","useStyles","makeStyles","root","width","MySlider","withStyles","height","thumb","backgroundColor","border","marginLeft","boxShadow","active","valueLabel","left","track","rail","Slider","SpeedSlider","speed","setSpeed","classes","Grid","container","spacing","alignItems","margin","xs","newValue","aria-labelledby","max","step","Reproductor","theme","formControl","minWidth","maxWidth","select","borderColor","icon","MenuProps","PaperProps","maxHeight","NodeSelector","source","setSource","FormControl","InputLabel","Select","label","inputProps","MenuItem","BfsPseudocode","focusCodeLine","require","delay","getAdj","vizNode","vizEdge","setFocusCodeLine","delayTime","setIsPlaying","printLog","a","adj","D","Q","P","i","push","MAX_VALUE","shift","BFSController","currentAlgorithm","resetViz","isPlaying","setError","isBlank","keys","Bfs","href","rel","AlgorithmsController","getAlgorithm","DrawGraphButton","setShowDrawGraph","LogData","logdata","slice","reverse","line","vizDataReducer","highlightId","Main","showDrawGraph","setGraphData","blankVizData","vizData","updateVizData","findEdgeId","canvasRef","addPos","setAddPos","canvasWidth","getBoundingClientRect","canvasHeight","setLogData","prevState","concat","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","exports","ms","Promise","res"],"mappings":"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","file":"static/js/main.57acc2eb.chunk.js","sourcesContent":["import React from 'react';\n\nexport default function NodeDrawn({ position, id, currentNode, handleClick, isDragged }) {\n  return (\n    <g\n      transform={`translate(${position.x},${position.y})`}\n      onMouseDown={(e) => {\n        e.stopPropagation();\n        handleClick(id);\n      }}\n      className='node'\n      style={{ cursor: `${isDragged ? 'move' : ''}` }}\n    >\n      <circle r='20' fill={currentNode === id ? '#DBE2EF' : 'white'} stroke='black' strokeWidth='4px'></circle>\n      <text x={-4.5 * (1 + (id > 9))} className='unselectable' y='5' fill='black'>\n        {Number(id)}\n      </text>\n    </g>\n  );\n}\n","import React from 'react';\n\nexport default function EdgeDrawn({ id, edge, position, currentEdge, handleClick, isWeighted, isDirected, isCurved }) {\n  const weight = edge.w;\n  const alfa = (Math.atan2(position.y2 - position.y1, position.x2 - position.x1) * 180) / Math.PI;\n  const length = Math.sqrt((position.x1 - position.x2) ** 2 + (position.y1 - position.y2) ** 2);\n  const centerX = (position.x1 + position.x2) / 2;\n  const centerY = 5 + (position.y1 + position.y2) / 2;\n  const isRight = position.x2 > position.x1;\n  const rotateTextAngle = alfa - 180 * !isRight;\n  const translateTextDistance = weight === '' ? 0 : -4.5 * Math.round(Math.log10(Math.abs(weight) + 1) + 1);\n  const bezierX =\n    centerX + (edge.u < edge.v ? 1 : -1) * ((isRight ? 1 : -1) * Math.min(length / 4, 50) * Math.sin((alfa * Math.PI) / 180));\n  const bezierY =\n    centerY + (edge.u < edge.v ? 1 : -1) * ((!isRight ? 1 : -1) * Math.min(length / 4, 50) * Math.cos((alfa * Math.PI) / 180));\n  const textPosX = isCurved ? 0.25 * position.x1 + 0.5 * bezierX + 0.25 * position.x2 : centerX;\n  const textPosY = isCurved ? 0.25 * position.y1 + 0.5 * bezierY + 0.25 * position.y2 : centerY;\n  const liftDistance = isCurved && edge.u > edge.v ? 20 : -10;\n  const t = 0.8;\n  const tempX = (1 - t) ** 2 * position.x1 + 2 * (1 - t) * t * bezierX + t ** 2 * position.x2;\n  const tempY = (1 - t) ** 2 * position.y1 + 2 * (1 - t) * t * bezierY + t ** 2 * position.y2;\n  const angle = (Math.atan2(position.y2 - tempY, position.x2 - tempX) * 180) / Math.PI;\n  return (\n    <g\n      onMouseDown={(e) => {\n        e.stopPropagation();\n        handleClick(id, 'single');\n      }}\n      onDoubleClick={(e) => {\n        e.stopPropagation();\n        handleClick(id, 'double');\n      }}\n      className='edge'\n    >\n      {/* Straight lines */}\n      {!isCurved && (\n        <>\n          <line x1={position.x1} y1={position.y1} x2={position.x2} y2={position.y2} stroke='rgba(0,0,0,0)' strokeWidth='15px' />\n          <line\n            x1={position.x1}\n            y1={position.y1}\n            x2={position.x2}\n            y2={position.y2}\n            stroke={currentEdge && currentEdge === id ? '#3F72AF' : 'black'}\n            strokeWidth='3px'\n          />\n        </>\n      )}\n      {/* Curved lines  */}\n      {isCurved && (\n        <>\n          <path\n            d={`M ${position.x1} ${position.y1} Q ${bezierX} ${bezierY} ${position.x2} ${position.y2}`}\n            stroke='rgba(0,0,0,0)'\n            strokeWidth='15px'\n            fill='transparent'\n          />\n          <path\n            d={`M ${position.x1} ${position.y1} Q ${bezierX} ${bezierY} ${position.x2} ${position.y2}`}\n            stroke={currentEdge && currentEdge === id ? '#3F72AF' : 'black'}\n            strokeWidth='3px'\n            fill='transparent'\n          />\n        </>\n      )}\n      {isWeighted && (\n        <text\n          x={textPosX}\n          y={textPosY}\n          className='unselectable'\n          fill={currentEdge && currentEdge.id === id ? '#3F72AF' : 'black'}\n          transform={`rotate(${rotateTextAngle} ${textPosX} ${textPosY}) \n          translate(${translateTextDistance} ${liftDistance})`}\n        >\n          {weight}\n        </text>\n      )}\n      {isDirected && (\n        <path\n          d={`M ${position.x2} ${position.y2} L ${position.x2 + 6} ${position.y2 + 20} \n          L ${position.x2 - 6} ${position.y2 + 20} Z`}\n          transform={`rotate(${(isCurved ? angle : alfa) + 90} ${position.x2} ${position.y2}) translate(0 18)`}\n          fill={currentEdge && currentEdge === id ? '#3F72AF' : 'black'}\n        />\n      )}\n    </g>\n  );\n}\n","import React, { useRef, useEffect } from 'react';\nimport ArrowForwardIcon from '@material-ui/icons/ArrowForward';\n\nexport default function EditWeight({ currentEdge, setCurrentEdge, handleSubmit }) {\n  const newWeight = useRef();\n  useEffect(() => {\n    if (currentEdge && newWeight.current) newWeight.current.focus();\n  }, [currentEdge]);\n  return (\n    <form\n      className='edit-weight-form'\n      onSubmit={(e) => {\n        e.preventDefault();\n        if (newWeight.current.value === '') return;\n        handleSubmit(currentEdge, newWeight.current.value);\n        setCurrentEdge(null);\n      }}\n    >\n      <input type='number' ref={newWeight} autoFocus />\n      <button type='submit'>\n        <ArrowForwardIcon fontSize='inherit' style={{ marginTop: '2px', color: 'white' }} />\n      </button>\n    </form>\n  );\n}\n","import React from 'react';\n\nexport default function Instructions() {\n  return (\n    <ul className='instructions'>\n      <h2>Instructions</h2>\n      <li>Click in an empty space to create a node</li>\n      <li>Click a node and then click another to create an edge</li>\n      <li>Drag nodes by pressing and releasing</li>\n      <li>Click a node or an edge and then press \"Delete\" to remove them</li>\n      <li>Double click an edge to change its weight (if weights are activated)</li>\n      <li>Copy the export data and keep it, later on you can paste it into the import box and recover your graph</li>\n    </ul>\n  );\n}\n","import React, { useState, useReducer } from 'react';\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\n\nexport default function ExportImport({ graphData, setGraph }) {\n  const [copyAlertOpen, setCopyAlertOpen] = useState(false);\n  const [showImport, setShowImport] = useReducer((st) => !st, false);\n  const [importText, setImportText] = useState('');\n  return (\n    <div className='import-export'>\n      <div className='export-name' onClick={() => setShowImport()}>\n        {showImport ? <ArrowDropDownIcon /> : <CheckCircleIcon style={{ fontSize: '1.2rem' }} />}\n        <h2>Export</h2>\n      </div>\n      {!showImport && (\n        <div className='export-box'>\n          <FileCopyIcon\n            className='copy-icon'\n            onClick={() => {\n              navigator.clipboard.writeText(JSON.stringify(graphData, null, '\\t'));\n              setCopyAlertOpen(true);\n            }}\n          />\n          <textarea value={JSON.stringify(graphData, null, '\\t')} readOnly />\n          <Snackbar\n            anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n            autoHideDuration={1500}\n            open={copyAlertOpen}\n            onClose={() => setCopyAlertOpen(false)}\n            message='Copied to clipboard!'\n          />\n        </div>\n      )}\n      <div\n        className='import-name'\n        onClick={() => setShowImport()}\n        style={{ borderRadius: `${showImport ? '0' : '0 0 5px 5px'}` }}\n      >\n        {showImport ? <CheckCircleIcon style={{ fontSize: '1.2rem' }} /> : <ArrowDropDownIcon />}\n        <h2>Import</h2>\n      </div>\n      {showImport && (\n        <div className='import-box'>\n          <textarea value={importText} onChange={(e) => setImportText(e.target.value)} />\n        </div>\n      )}\n      {showImport && (\n        <div className='import-button' onClick={() => setGraph(JSON.parse(importText))}>\n          Submit\n        </div>\n      )}\n    </div>\n  );\n}\n","import React from 'react';\nimport BackspaceIcon from '@material-ui/icons/Backspace';\n\nexport default function Back({ close }) {\n  return (\n    <div className='draw-graph-button' onClick={close}>\n      <BackspaceIcon fontSize='inherit' />\n      <h3>Back</h3>\n    </div>\n  );\n}\n","import React from 'react';\n\nexport default function FinishButton({ finish }) {\n  return (\n    <div className='draw-graph-button' onClick={finish}>\n      <h3>Finish</h3>\n    </div>\n  );\n}\n","import React from 'react';\nimport Switch from '@material-ui/core/Switch';\n\nexport default function WeightedEdgesToggle({ isWeighted, setIsWeighted }) {\n  return (\n    <div className='draw-graph-checkbox grid-left'>\n      <h3>Weighted edges</h3>\n      <Switch\n        checked={isWeighted}\n        onChange={(e) => {\n          setIsWeighted(e.target.checked);\n        }}\n        color='secondary'\n      />\n    </div>\n  );\n}\n","import React from 'react';\nimport Switch from '@material-ui/core/Switch';\n\nexport default function DirectedEdgesToggle({ isDirected, setIsDirected }) {\n  return (\n    <div className='draw-graph-checkbox grid-right'>\n      <h3>Directed edges</h3>\n      <Switch\n        checked={isDirected}\n        onChange={(e) => {\n          setIsDirected(e.target.checked);\n        }}\n        color='secondary'\n      />\n    </div>\n  );\n}\n","import React from 'react';\nimport RestoreIcon from '@material-ui/icons/Restore';\n\nexport default function NewButton({ resetGraph }) {\n  return (\n    <div className='draw-graph-button' onClick={resetGraph}>\n      <h3>New</h3>\n      <RestoreIcon fontSize='inherit' />\n    </div>\n  );\n}\n","import React from 'react';\n\nexport default function TemporalEdge({ x1, y1, x2, y2 }) {\n  const alfa = (Math.atan2(y2 - y1, x2 - x1) * 180) / Math.PI;\n  return (\n    <g>\n      <line x1={x1} y1={y1} x2={x2} y2={y2} stroke='black' strokeWidth='3px' />\n      <path\n        d={`M ${x2} ${y2} L ${x2 + 6} ${y2 + 20} \n          L ${x2 - 6} ${y2 + 20} Z`}\n        transform={`rotate(${alfa + 90} ${x2} ${y2})`}\n      />\n    </g>\n  );\n}\n","import React from 'react';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant='filled' {...props} />;\n}\n\nexport default function SnackbarAlert({ openError, setOpenError, error }) {\n  function closeSnackbar(evt, reason) {\n    if (reason === 'clickaway') return;\n    setOpenError(false);\n  }\n  return (\n    <Snackbar open={openError} autoHideDuration={3000} onClose={closeSnackbar}>\n      <Alert onClose={closeSnackbar} severity='error'>\n        {error}\n      </Alert>\n    </Snackbar>\n  );\n}\n","import React, { useState, useReducer, useRef, useEffect } from 'react';\nimport NodeDrawn from './NodeDrawn';\nimport EdgeDrawn from './EdgeDrawn';\nimport EditWeight from './EditWeight';\nimport Instructions from './Instructions';\nimport ExportImport from './ExportImport';\nimport BackButton from './Buttons/BackButton';\nimport FinishButton from './Buttons/FinishButton';\nimport WeightedEdgesToggle from './Buttons/WeightedEdgesToggle';\nimport DirectedEdgesToggle from './Buttons/DirectedEdgesToggle';\nimport NewButton from './Buttons/NewButton';\nimport TemporalEdge from './TemporalEdge';\nimport SnackbarAlert from '../Common/SnackbarAlert';\nimport './DrawGraph.css';\nimport '../Common/Extra.css';\n\nfunction dataReducer(state, event) {\n  switch (event.name) {\n    case 'add-node':\n      return {\n        ...state,\n        nodes: { ...state.nodes, [event.value.id ?? state.topNode]: event.value.node },\n        topNode: state.topNode + (event.value.id === undefined ? 1 : 0),\n      };\n    case 'add-edge':\n      return {\n        ...state,\n        edges: { ...state.edges, [event.value.id ?? state.topEdge]: event.value.edge },\n        topEdge: state.topEdge + (event.value.id === undefined ? 1 : 0),\n      };\n    case 'delete-node':\n      delete state.nodes[event.value];\n      return state;\n    case 'edit-edge':\n      state.edges[event.value.id].w = event.value.weight;\n      return state;\n    case 'delete-edge':\n      delete state.edges[event.value];\n      return state;\n    case 'set-graph':\n      return event.value;\n    case 'set-isWeighted':\n      return { ...state, isWeighted: event.value };\n    case 'set-isDirected':\n      return { ...state, isDirected: event.value };\n    default:\n      throw new Error();\n  }\n}\nexport default function DrawGraph({ close, sendGraph, currentGraph }) {\n  const blankGraph = { topNode: 0, topEdge: 0, isWeighted: false, isDirected: false, nodes: {}, edges: {} };\n  const [graphData, updateGraphData] = useReducer(dataReducer, blankGraph);\n  const [currentNode, setCurrentNode] = useState(null);\n  const [currentEdge, setCurrentEdge] = useState(null);\n  //Error states\n  const [openError, setOpenError] = useState(false);\n  const [errorMessage, setErrorMessage] = useState('');\n\n  //Vector to draw temporary line\n  const [edgeVector, setEdgeVector] = useState({ x: 0, y: 0 });\n\n  //Update initially the graph\n  useEffect(() => {\n    setGraph(currentGraph);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  //State to open and close editWeight\n  const [showEditWeight, setShowEditWeight] = useState(false);\n  useEffect(() => {\n    if (currentEdge === null) setShowEditWeight(false);\n  }, [currentEdge]);\n\n  function createNode(posX, posY) {\n    updateGraphData({\n      name: 'add-node',\n      value: { node: { x: posX, y: posY } },\n    });\n  }\n  function createEdge(first, second) {\n    if (first === second) return;\n    //If user tries to add edge to u->v and it already exists\n    if (findEdge(first, second)) {\n      setErrorMessage('Edge already exists!');\n      setOpenError(true);\n      return;\n    }\n    //If user tries to add edge u->v but v->u already exists and is not directed\n    if (!graphData.isDirected && findEdge(second, first)) {\n      setErrorMessage('Graph needs to be directed to add double edges!');\n      setOpenError(true);\n      return;\n    }\n    updateGraphData({\n      name: 'add-edge',\n      value: { edge: { u: first, v: second, w: '1' } },\n    });\n  }\n  function deleteNode(id) {\n    Object.entries(graphData.edges).forEach((element) => {\n      const key = element[0];\n      const edge = element[1];\n      if (edge.u === id || edge.v === id) deleteEdge(key);\n    });\n    updateGraphData({\n      name: 'delete-node',\n      value: id,\n    });\n  }\n  function deleteEdge(id) {\n    updateGraphData({\n      name: 'delete-edge',\n      value: id,\n    });\n  }\n  function handleClickEdge(id, clicks) {\n    setCurrentEdge(id);\n    setCurrentNode(null);\n    if (clicks === 'double') {\n      setShowEditWeight(true);\n    }\n  }\n  // Drag and drop functionality\n  const dragTimeoutId = useRef('');\n  const [isDragging, setIsDragging] = useState(false);\n\n  function handleMouseUpNode() {\n    if (isDragging) {\n      DropNode();\n    } else {\n      clearTimeout(dragTimeoutId.current);\n    }\n  }\n  function handleClickNode(id) {\n    if (currentNode == null) {\n      clear();\n      setCurrentNode(id);\n      dragTimeoutId.current = setTimeout(() => {\n        setIsDragging(true);\n      }, 100);\n    } else {\n      createEdge(currentNode, id);\n      setCurrentNode(null);\n    }\n  }\n  function DragNode(posX, posY) {\n    updateGraphData({\n      name: 'add-node',\n      value: { id: currentNode, node: { x: posX, y: posY } },\n    });\n  }\n  function DropNode() {\n    setCurrentNode(null);\n    setIsDragging(false);\n  }\n  function editWeight(id, weight) {\n    updateGraphData({\n      name: 'edit-edge',\n      value: { id, weight },\n    });\n  }\n  function clear() {\n    setCurrentNode(null);\n    setCurrentEdge(null);\n  }\n  function setGraph(graph) {\n    updateGraphData({\n      name: 'set-graph',\n      value: graph,\n    });\n  }\n  function hasDoubleEdge() {\n    let ret = false;\n    Object.values(graphData.edges).forEach(({ u, v }) => {\n      if (findEdge(u, v) && findEdge(v, u)) ret = true;\n    });\n    return ret;\n  }\n  function findEdge(u, v) {\n    return Object.values(graphData.edges).find((edge) => edge.u === u && edge.v === v);\n  }\n  return (\n    <div className='popup-out'>\n      <div className='draw-graph-container popup-in'>\n        <Instructions />\n        <svg\n          className='draw-graph'\n          onMouseDown={(event) => {\n            if (currentNode == null && currentEdge == null) createNode(event.nativeEvent.offsetX, event.nativeEvent.offsetY);\n            else clear();\n          }}\n          onMouseMove={(event) => {\n            if (isDragging) {\n              DragNode(event.nativeEvent.offsetX, event.nativeEvent.offsetY);\n            } else {\n              setEdgeVector({\n                x: event.nativeEvent.offsetX,\n                y: event.nativeEvent.offsetY,\n              });\n            }\n          }}\n          onMouseUp={handleMouseUpNode}\n          onKeyDown={(event) => {\n            if (event.code === 'Escape') {\n              setCurrentNode(null);\n              setCurrentEdge(null);\n            }\n            if (event.code === 'Delete') {\n              if (currentEdge != null) {\n                deleteEdge(currentEdge);\n              }\n              if (currentNode != null) deleteNode(currentNode);\n              setCurrentNode(null);\n              setCurrentEdge(null);\n            }\n          }}\n          tabIndex='0'\n        >\n          {currentNode != null && isDragging === false && (\n            <TemporalEdge\n              x1={graphData.nodes[currentNode].x}\n              y1={graphData.nodes[currentNode].y}\n              x2={edgeVector.x}\n              y2={edgeVector.y}\n            />\n          )}\n          {Object.entries(graphData.edges).map((element) => {\n            const idx = element[0];\n            const edge = element[1];\n            return (\n              <EdgeDrawn\n                key={idx}\n                id={idx}\n                edge={edge}\n                currentEdge={currentEdge}\n                position={{\n                  x1: graphData.nodes[edge.u].x,\n                  y1: graphData.nodes[edge.u].y,\n                  x2: graphData.nodes[edge.v].x,\n                  y2: graphData.nodes[edge.v].y,\n                }}\n                setCurrentEdge={setCurrentEdge}\n                handleClick={handleClickEdge}\n                isWeighted={graphData.isWeighted}\n                isDirected={graphData.isDirected}\n                isCurved={findEdge(edge.v, edge.u) !== undefined}\n              />\n            );\n          })}\n          {Object.entries(graphData.nodes).map((element) => {\n            const idx = element[0];\n            const node = element[1];\n            return (\n              <NodeDrawn\n                key={idx}\n                id={idx}\n                position={node}\n                handleClick={handleClickNode}\n                currentNode={currentNode}\n                isDragged={isDragging && idx === currentNode}\n              />\n            );\n          })}\n        </svg>\n        <SnackbarAlert openError={openError} setOpenError={setOpenError} error={errorMessage} />\n        {showEditWeight && graphData.isWeighted && (\n          <EditWeight currentEdge={currentEdge} setCurrentEdge={setCurrentEdge} handleSubmit={editWeight} />\n        )}\n        <ExportImport graphData={graphData} setGraph={setGraph} />\n        <BackButton close={close} />\n        <WeightedEdgesToggle\n          isWeighted={graphData.isWeighted}\n          setIsWeighted={(checked) => updateGraphData({ name: 'set-isWeighted', value: checked })}\n        />\n        <FinishButton\n          finish={() => {\n            sendGraph(graphData);\n            close();\n          }}\n        />\n        <DirectedEdgesToggle\n          isDirected={graphData.isDirected}\n          setIsDirected={(checked) => {\n            //If it has double edge throw error when trying to change to undirected\n            if (hasDoubleEdge() && checked === false) {\n              setErrorMessage(\"There is a double edge, graph can't be undirected until double edges are removed\");\n              setOpenError(true);\n              return;\n            }\n            updateGraphData({ name: 'set-isDirected', value: checked });\n          }}\n        />\n        <NewButton resetGraph={() => setGraph(blankGraph)} />\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\n\nexport default function Node({ position, id, highlight }) {\n  function color() {\n    switch (highlight) {\n      case 1:\n        return '#39A2DB';\n      case 2:\n        return 'yellow';\n      default:\n        return 'white';\n    }\n  }\n  return (\n    <g transform={`translate(${position.x},${position.y})`}>\n      <circle r='20' fill={color()} stroke='black' strokeWidth='4px'></circle>\n      <text x={-4.5 * (1 + (id > 9))} className='unselectable' y='5' fill='black'>\n        {Number(id)}\n      </text>\n    </g>\n  );\n}\n","import React from 'react';\n\nexport default function Edge({ id, edge, position, isWeighted, isDirected, isCurved, highlight }) {\n  const weight = edge.w;\n  const alfa = (Math.atan2(position.y2 - position.y1, position.x2 - position.x1) * 180) / Math.PI;\n  const length = Math.sqrt((position.x1 - position.x2) ** 2 + (position.y1 - position.y2) ** 2);\n  const centerX = (position.x1 + position.x2) / 2;\n  const centerY = 5 + (position.y1 + position.y2) / 2;\n  const isRight = position.x2 > position.x1;\n  const rotateTextAngle = alfa - 180 * !isRight;\n  const translateTextDistance = weight === '' ? 0 : -4.5 * Math.round(Math.log10(Math.abs(weight) + 1) + 1);\n  const bezierX =\n    centerX + (edge.u < edge.v ? 1 : -1) * ((isRight ? 1 : -1) * Math.min(length / 4, 50) * Math.sin((alfa * Math.PI) / 180));\n  const bezierY =\n    centerY + (edge.u < edge.v ? 1 : -1) * ((!isRight ? 1 : -1) * Math.min(length / 4, 50) * Math.cos((alfa * Math.PI) / 180));\n  const textPosX = isCurved ? 0.25 * position.x1 + 0.5 * bezierX + 0.25 * position.x2 : centerX;\n  const textPosY = isCurved ? 0.25 * position.y1 + 0.5 * bezierY + 0.25 * position.y2 : centerY;\n  const liftDistance = isCurved && edge.u > edge.v ? 20 : -10;\n  const t = 0.8;\n  const tempX = (1 - t) ** 2 * position.x1 + 2 * (1 - t) * t * bezierX + t ** 2 * position.x2;\n  const tempY = (1 - t) ** 2 * position.y1 + 2 * (1 - t) * t * bezierY + t ** 2 * position.y2;\n  const angle = (Math.atan2(position.y2 - tempY, position.x2 - tempX) * 180) / Math.PI;\n  function color() {\n    switch (highlight) {\n      case 1:\n        return '#39A2DB';\n      case 2:\n        return 'red';\n      default:\n        return 'black';\n    }\n  }\n  return (\n    <g>\n      {/* Straight lines */}\n      {!isCurved && (\n        <>\n          <line x1={position.x1} y1={position.y1} x2={position.x2} y2={position.y2} stroke='rgba(0,0,0,0)' strokeWidth='15px' />\n          <line x1={position.x1} y1={position.y1} x2={position.x2} y2={position.y2} stroke={color()} strokeWidth='3px' />\n        </>\n      )}\n      {/* Curved lines  */}\n      {isCurved && (\n        <>\n          <path\n            d={`M ${position.x1} ${position.y1} Q ${bezierX} ${bezierY} ${position.x2} ${position.y2}`}\n            stroke='rgba(0,0,0,0)'\n            strokeWidth='15px'\n            fill='transparent'\n          />\n          <path\n            d={`M ${position.x1} ${position.y1} Q ${bezierX} ${bezierY} ${position.x2} ${position.y2}`}\n            stroke={color()}\n            strokeWidth='3px'\n            fill='transparent'\n          />\n        </>\n      )}\n      {isWeighted && (\n        <text\n          x={textPosX}\n          y={textPosY}\n          className='unselectable'\n          fill='black'\n          transform={`rotate(${rotateTextAngle} ${textPosX} ${textPosY}) \n          translate(${translateTextDistance} ${liftDistance})`}\n        >\n          {weight}\n        </text>\n      )}\n      {isDirected && (\n        <path\n          d={`M ${position.x2} ${position.y2} L ${position.x2 + 6} ${position.y2 + 20} \n          L ${position.x2 - 6} ${position.y2 + 20} Z`}\n          transform={`rotate(${(isCurved ? angle : alfa) + 90} ${position.x2} ${position.y2}) translate(0 18)`}\n          fill={color()}\n        />\n      )}\n    </g>\n  );\n}\n","import React, { useReducer } from 'react';\nimport ArrowRightIcon from '@material-ui/icons/ArrowRight';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\n\nexport default function SubMenu({ title, list, setCurrentAlgorithm }) {\n  const [open, toggleOpen] = useReducer((st) => !st, false);\n  return (\n    <div className='submenu' onClick={toggleOpen}>\n      <div className='submenu-title'>\n        <h3>{title}</h3>\n        {open ? <ArrowDropDownIcon style={{ fontSize: '1.5rem' }} /> : <ArrowRightIcon style={{ fontSize: '1.5rem' }} />}\n      </div>\n      {open && (\n        <div className='submenu-list'>\n          {list.map((item, id) => (\n            <h4\n              key={id}\n              className='submenu-item'\n              onClick={(e) => {\n                e.stopPropagation();\n                setCurrentAlgorithm(item);\n              }}\n            >\n              {item}\n            </h4>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n}\n","import React from 'react';\nimport SubMenu from './SubMenu';\nimport './Menu.css';\n\nexport default function Menu({ setCurrentAlgorithm }) {\n  const algorithms = [\n    ['Elementary Graph Algorithms', ['Breadth-first search', 'Depth-first search', 'Topological sort']],\n    ['Minimum Spanning Trees', ['Kruskal', 'Prim']],\n    ['Single-Source Shortest Paths', ['Breadth-first search', 'Dijkstra’s algorithm ', 'Bellman-Ford algorithm']],\n    ['All-Pairs Shortest Paths', ['Floyd-Warshall algorithm']],\n    ['Maximum Flow', ['Ford-Fulkerson', 'Maximum bipartite matching']],\n  ];\n  return (\n    <div className='menu'>\n      <h2>Algorithms</h2>\n      {/* Elementary Graph Algorithms */}\n      <SubMenu title={algorithms[0][0]} list={algorithms[0][1]} setCurrentAlgorithm={setCurrentAlgorithm} />\n      {/* Minimum Spanning Trees */}\n      <SubMenu title={algorithms[1][0]} list={algorithms[1][1]} setCurrentAlgorithm={setCurrentAlgorithm} />\n      {/* Single-Source Shortest Paths */}\n      <SubMenu title={algorithms[2][0]} list={algorithms[2][1]} setCurrentAlgorithm={setCurrentAlgorithm} />\n      {/* All-Pairs Shortest Paths */}\n      <SubMenu title={algorithms[3][0]} list={algorithms[3][1]} setCurrentAlgorithm={setCurrentAlgorithm} />\n      {/* Maximum Flow */}\n      <SubMenu title={algorithms[4][0]} list={algorithms[4][1]} setCurrentAlgorithm={setCurrentAlgorithm} />\n    </div>\n  );\n}\n","import React from 'react';\nimport LinkedInIcon from '@material-ui/icons/LinkedIn';\nimport GitHubIcon from '@material-ui/icons/GitHub';\n\nexport default function Footer() {\n  return (\n    <div className='footer'>\n      <p>© 2021 Gonzalo Pereira</p>\n      <LinkedInIcon onClick={() => window.open('https://www.linkedin.com/in/gonzalo-pereira-ramirez-8818a5195/')} />\n      <GitHubIcon onClick={() => window.open('https://github.com/GonzaloPereira/graph-visualizer')} />\n    </div>\n  );\n}\n","import React from 'react';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Slider from '@material-ui/core/Slider';\nimport SpeedIcon from '@material-ui/icons/Speed';\n\nconst useStyles = makeStyles({\n  root: {\n    width: 300,\n  },\n});\nconst MySlider = withStyles({\n  root: {\n    color: '#3f72af',\n    height: 8,\n  },\n  thumb: {\n    height: 24,\n    width: 24,\n    backgroundColor: '#fff',\n    border: '2px solid currentColor',\n    marginTop: -8,\n    marginLeft: -12,\n    '&:focus, &:hover, &$active': {\n      boxShadow: 'inherit',\n    },\n  },\n  active: {},\n  valueLabel: {\n    left: 'calc(-50% + 4px)',\n  },\n  track: {\n    height: 8,\n    borderRadius: 4,\n  },\n  rail: {\n    height: 8,\n    borderRadius: 4,\n  },\n})(Slider);\n\nexport default function SpeedSlider({ speed, setSpeed }) {\n  const classes = useStyles();\n\n  const handleChange = (event, newValue) => {\n    setSpeed(newValue);\n  };\n  return (\n    <div className={classes.root}>\n      <Grid container spacing={2} alignItems='center'>\n        <Grid item>\n          <p style={{ margin: '0.8rem' }}>Speed</p>\n        </Grid>\n        <Grid item xs>\n          <MySlider value={speed} onChange={handleChange} aria-labelledby='continuous-slider' min={400} max={900} step={1} />\n        </Grid>\n        <Grid item>\n          <SpeedIcon />\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n","import React from 'react';\nimport SpeedSlider from './SpeedSlider';\nimport './Reproductor.css';\n\nexport default function Reproductor({ speed, setSpeed }) {\n  return (\n    <div className='reproductor'>\n      <SpeedSlider speed={speed} setSpeed={setSpeed} />\n    </div>\n  );\n}\n","import React from 'react';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport { makeStyles } from '@material-ui/core/styles';\nconst color = 'white';\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 150,\n    maxWidth: 200,\n  },\n  select: {\n    '&:before': {\n      borderColor: color,\n    },\n    '&:after': {\n      borderColor: color,\n    },\n    '&:hover': {\n      borderColor: color,\n    },\n  },\n  icon: {\n    fill: color,\n  },\n}));\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: 250,\n      width: 150,\n    },\n  },\n};\nexport default function NodeSelector({ nodes, source, setSource }) {\n  const classes = useStyles();\n  const handleChangeSource = (event) => {\n    setSource(event.target.value);\n  };\n  const whiteStyle = { color: 'white' };\n  return (\n    <FormControl className={classes.formControl}>\n      <InputLabel style={whiteStyle}>Source</InputLabel>\n      <Select\n        className={classes.select}\n        value={source}\n        onChange={handleChangeSource}\n        label='Source'\n        MenuProps={MenuProps}\n        inputProps={{ classes: { icon: classes.icon } }}\n        style={{ color: 'white' }}\n      >\n        {nodes.map((node, idx) => (\n          <MenuItem key={idx} value={node}>\n            {node}\n          </MenuItem>\n        ))}\n      </Select>\n    </FormControl>\n  );\n}\n","import React from 'react';\n\nexport default function BfsPseudocode({ focusCodeLine }) {\n  function highlight(id) {\n    return { backgroundColor: focusCodeLine === id ? '#06121f' : '' };\n  }\n  return (\n    <ol className='pseudocode'>\n      <li className='tab1'>for each vertex u &#8712; G:V &minus; &#123;s&#125;</li>\n      <li className='tab2'>d[u] = &infin;</li>\n      <li className='tab1'>d[s] = 0</li>\n      <li className='tab1' style={highlight(4)}>\n        ENQUEUE(Q,s)\n      </li>\n      <li className='tab1'>while (Q not empty) &#123;</li>\n      <li className='tab2' style={highlight(6)}>\n        u = DEQUEUE(Q)\n      </li>\n      <li className='tab2'>for each v &#8712; G.Adj[u] &#123;</li>\n      <li className='tab3'>if (d[v] == &infin;) &#123;</li>\n      <li className='tab4' style={highlight(9)}>\n        d[v] = d[u] + 1\n      </li>\n      <li className='tab4' style={highlight(9)}>\n        ENQUEUE.(Q,v)\n      </li>\n      <li className='tab3'>&#125;</li>\n      <li className='tab2'>&#125;</li>\n      <li className='tab1'>&#125;</li>\n    </ol>\n  );\n}\n","const { delay, getAdj } = require('../Extra/Common.js');\n\nexport async function Bfs(graphData, source, vizNode, vizEdge, setFocusCodeLine, delayTime, setIsPlaying, printLog) {\n  const topNode = graphData.topNode;\n  const edges = Object.values(graphData.edges);\n  const isDirected = graphData.isDirected;\n  const adj = getAdj(topNode, edges, isDirected);\n\n  // BFS starts here\n  await delay(50);\n  printLog('Breadth-first search:');\n  const D = []; // Array of distances\n  const Q = []; // Queue\n  const P = []; // Parents\n  for (let i = 0; i < topNode; i++) {\n    D.push(Number.MAX_VALUE);\n    P.push(-1);\n    adj.push([]);\n  }\n  Q.push(source);\n  D[source] = 0;\n\n  printLog(`Minimum distance from ${source} to ${source} ->  D[${source}] = ${D[source]}`);\n  setFocusCodeLine(4);\n  await delay(delayTime);\n\n  while (Q.length > 0) {\n    const u = Q[0];\n    Q.shift();\n\n    // Visualization code\n    vizNode(u, 2);\n    setFocusCodeLine(6);\n    await delay(delayTime);\n\n    for (let i = 0; i < adj[u].length; i++) {\n      const v = adj[u][i];\n      if (P[u] === v) continue;\n\n      if (D[v] === Number.MAX_VALUE) {\n        D[v] = D[u] + 1;\n        P[v] = Number(u);\n        Q.push(v);\n\n        //Log print\n        printLog(`Minimum distance from ${source} to ${v} ->  D[${v}] = ${D[v]}`);\n\n        // Visualization code\n        vizEdge(u, v, 1);\n        if (!isDirected) vizEdge(v, u, 1);\n        vizNode(v, 1);\n        setFocusCodeLine(9);\n        await delay(delayTime);\n        setFocusCodeLine();\n        await delay(delayTime / 5);\n      } else {\n        // Visualization code\n        vizEdge(u, v, 2);\n        if (!isDirected) vizEdge(v, u, 2);\n        setFocusCodeLine();\n        await delay(delayTime);\n        vizEdge(u, v, 0);\n        if (!isDirected) vizEdge(v, u, 0);\n      }\n    }\n    vizNode(u, 1);\n    setFocusCodeLine();\n    await delay(delayTime / 5);\n  }\n  setIsPlaying(false);\n}\n","import React, { useState } from 'react';\nimport NodeSelector from '../Extra/NodeSelector';\nimport BfsPseudocode from './BfsPseudocode';\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\nimport SnackbarAlert from '../../Common/SnackbarAlert';\nimport { Bfs } from './Bfs';\n\nexport default function BFSController({\n  currentAlgorithm,\n  graphData,\n  vizNode,\n  vizEdge,\n  resetViz,\n  delayTime,\n  isPlaying,\n  setIsPlaying,\n  printLog,\n}) {\n  const [source, setSource] = useState();\n  const [focusCodeLine, setFocusCodeLine] = useState();\n  // Errors\n  const [openError, setOpenError] = useState(false);\n  const [error, setError] = useState();\n  const isBlank = Object.keys(graphData.nodes).length === 0;\n  function handleClick() {\n    if (isPlaying) {\n      setOpenError(true);\n      setError('Wait until the visualization is finished');\n      return;\n    }\n    if (isBlank) {\n      setOpenError(true);\n      setError('Please select or draw a graph first');\n      return;\n    }\n    if (!source) {\n      setOpenError(true);\n      setError('Please select source');\n      return;\n    }\n    setIsPlaying(true);\n    resetViz();\n    Bfs(graphData, source, vizNode, vizEdge, setFocusCodeLine, delayTime, setIsPlaying, printLog);\n  }\n\n  return (\n    <div className='controller'>\n      <h3>{currentAlgorithm}</h3>\n      <BfsPseudocode focusCodeLine={focusCodeLine} />\n      <NodeSelector nodes={Object.keys(graphData.nodes)} source={source} setSource={setSource} />\n      <div className='play-button' onClick={handleClick}>\n        <h2>Play!</h2>\n        <PlayArrowIcon style={{ fontSize: '1rem', marginTop: '0.1rem' }} />\n      </div>\n      <SnackbarAlert openError={openError} setOpenError={setOpenError} error={error} />\n      <a href='https://en.wikipedia.org/wiki/Breadth-first_search' target='_blank' rel='noreferrer'>\n        Algorithm info\n      </a>\n    </div>\n  );\n}\n","import React from 'react';\nimport BfsController from './Elementary/BfsController';\nimport './AlgorithmsController.css';\n\nexport default function AlgorithmsController(props) {\n  function getAlgorithm(currentAlgorithm) {\n    switch (currentAlgorithm) {\n      case 'Breadth-first search':\n        return <BfsController {...props} />;\n      default:\n        return;\n    }\n  }\n  return <div className='algorithm'>{getAlgorithm(props.currentAlgorithm)}</div>;\n}\n","import React from 'react';\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\n\nexport default function DrawGraphButton({ setShowDrawGraph }) {\n  return (\n    <div className='draw-graph-area'>\n      <div onClick={() => setShowDrawGraph(true)}>\n        <h2>Draw graph</h2>\n        <ArrowForwardIosIcon style={{ fontSize: '1rem', marginTop: '0.1rem' }} />\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\nimport './LogData.css';\n\nexport default function LogData({ logdata }) {\n  return (\n    <div className='logdata'>\n      {logdata\n        .slice(0)\n        .reverse()\n        .map((line, idx) => {\n          return <p key={idx}>{line}</p>;\n        })}\n    </div>\n  );\n}\n","import React, { useState, useReducer, useRef, useEffect } from 'react';\nimport DrawGraph from './DrawGraph/DrawGraph';\nimport Node from './Canvas/Node';\nimport Edge from './Canvas/Edge';\nimport Menu from './Menu/Menu';\nimport Footer from './Footer';\nimport Reproductor from './Reproductor/Reproductor';\nimport AlgorithmsController from './Algorithms/AlgorithmsController';\nimport DrawGraphButton from './DrawGraphButton';\nimport LogData from './LogData/LogData';\nimport './Main.css';\n\nfunction vizDataReducer(state, event) {\n  switch (event.name) {\n    case 'node':\n      return { ...state, nodes: { ...state.nodes, [event.value.id]: event.value.highlightId } };\n    case 'edge':\n      return { ...state, edges: { ...state.edges, [event.value.id]: event.value.highlightId } };\n    case 'reset':\n      return event.value;\n    default:\n      throw new Error();\n  }\n}\n\nexport default function Main() {\n  const [showDrawGraph, setShowDrawGraph] = useState(false);\n  const blankGraph = { topNode: 0, topEdge: 0, isWeighted: false, isDirected: false, nodes: {}, edges: {} };\n  const [graphData, setGraphData] = useState(blankGraph);\n\n  const [currentAlgorithm, setCurrentAlgorithm] = useState();\n\n  // Visualization states\n  const blankVizData = { nodes: {}, edges: {} };\n  const [vizData, updateVizData] = useReducer(vizDataReducer, blankVizData);\n  const [speed, setSpeed] = useState(600);\n  const [isPlaying, setIsPlaying] = useState(false);\n  function vizNode(id, highlightId) {\n    updateVizData({\n      name: 'node',\n      value: { id: id, highlightId: highlightId },\n    });\n  }\n  function vizEdge(u, v, highlightId) {\n    const edge = findEdgeId(u, v);\n    if (edge !== undefined) {\n      updateVizData({\n        name: 'edge',\n        value: { id: edge, highlightId: highlightId },\n      });\n    }\n  }\n  function resetViz() {\n    updateVizData({\n      name: 'reset',\n      value: blankVizData,\n    });\n  }\n  function findEdgeId(u, v) {\n    return Object.keys(graphData.edges).find(\n      (id) => Number(graphData.edges[id].u) === Number(u) && Number(graphData.edges[id].v) === Number(v)\n    );\n  }\n  // Canvas positioning\n  const canvasRef = useRef();\n  const [addPos, setAddPos] = useState({ x: 0, y: 0 });\n  const canvasWidth = canvasRef.current ? canvasRef.current.getBoundingClientRect().width : 900;\n  const canvasHeight = canvasRef.current ? canvasRef.current.getBoundingClientRect().height : 500;\n  useEffect(() => {\n    setAddPos({ x: (canvasWidth - 900) / 2, y: (canvasHeight - 500) / 2 });\n  }, [canvasWidth, canvasHeight]);\n\n  //logdata states\n  const [logdata, setLogData] = useState([]);\n  function printLog(line) {\n    setLogData((prevState) => prevState.concat(line));\n  }\n  useEffect(() => {\n    if (isPlaying) setLogData([]);\n  }, [isPlaying]);\n\n  return (\n    <>\n      <main>\n        <div className='header'>\n          <h1>Graph Visualizer</h1>\n        </div>\n\n        <Menu setCurrentAlgorithm={setCurrentAlgorithm} />\n        <div className='canvas' ref={canvasRef}>\n          <svg>\n            {Object.entries(graphData.edges).map((element) => {\n              const idx = element[0];\n              const edge = element[1];\n              return (\n                <Edge\n                  key={idx}\n                  id={idx}\n                  edge={edge}\n                  position={{\n                    x1: graphData.nodes[edge.u].x + addPos.x,\n                    y1: graphData.nodes[edge.u].y + addPos.y,\n                    x2: graphData.nodes[edge.v].x + addPos.x,\n                    y2: graphData.nodes[edge.v].y + addPos.y,\n                  }}\n                  isWeighted={graphData.isWeighted}\n                  isDirected={graphData.isDirected}\n                  isCurved={findEdgeId(edge.v, edge.u) !== undefined}\n                  highlight={vizData.edges[idx]}\n                />\n              );\n            })}\n            {Object.entries(graphData.nodes).map((element) => {\n              const idx = element[0];\n              const node = element[1];\n              return (\n                <Node\n                  key={idx}\n                  id={idx}\n                  position={{ x: node.x + addPos.x, y: node.y + addPos.y }}\n                  highlight={vizData.nodes[idx]}\n                />\n              );\n            })}\n          </svg>\n        </div>\n        <AlgorithmsController\n          currentAlgorithm={currentAlgorithm}\n          vizNode={vizNode}\n          vizEdge={vizEdge}\n          graphData={graphData}\n          resetViz={resetViz}\n          delayTime={1000 - speed}\n          isPlaying={isPlaying}\n          setIsPlaying={setIsPlaying}\n          printLog={printLog}\n        />\n        <Reproductor speed={speed} setSpeed={setSpeed} />\n        <LogData logdata={logdata} />\n        <DrawGraphButton setShowDrawGraph={setShowDrawGraph} />\n        <Footer />\n      </main>\n      {showDrawGraph && (\n        <DrawGraph\n          currentGraph={graphData}\n          sendGraph={setGraphData}\n          close={() => {\n            setShowDrawGraph(false);\n            resetViz();\n          }}\n        />\n      )}\n    </>\n  );\n}\n","import './App.css';\nimport Main from './components/Main';\nfunction App() {\n  return (\n    <div className='App'>\n      <Main />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","exports.delay = async (ms) => new Promise((res) => setTimeout(res, ms));\n\nexports.getAdj = (topNode, edges, isDirected) => {\n  const adj = [];\n  for (let i = 0; i < topNode; i++) {\n    adj.push([]);\n  }\n  for (let i = 0; i < edges.length; i++) {\n    adj[Number(edges[i].u)].push(Number(edges[i].v));\n    if (!isDirected) adj[Number(edges[i].v)].push(Number(edges[i].u));\n  }\n  return adj;\n};\n"],"sourceRoot":""}