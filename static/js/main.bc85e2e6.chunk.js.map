{"version":3,"sources":["components/Node.jsx","components/Edge.jsx","components/Canvas.jsx","App.jsx","reportWebVitals.js","index.jsx"],"names":["Node","position","id","currentNode","handleClick","isDragged","transform","x","y","onMouseDown","e","stopPropagation","className","style","cursor","r","fill","stroke","strokeWidth","Number","Edge","currentEdge","x1","y1","x2","y2","dataReducer","state","event","name","nodes","value","node","edges","edge","Error","Canvas","useReducer","graphData","updateGraphData","useState","setCurrentNode","setCurrentEdge","edgeVector","setEdgeVector","numNodes","useRef","numEdges","deleteEdge","handleClickEdge","dragTimeoutId","isDragging","setIsDragging","handleClickNode","first","second","current","setTimeout","u","v","w","posX","posY","nativeEvent","offsetX","offsetY","onMouseMove","onMouseUp","clearTimeout","onKeyDown","console","log","code","Object","entries","forEach","element","key","tabIndex","width","height","map","idx","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bc85e2e6.chunk.js","sourcesContent":["import React from 'react';\n\nexport default function Node({ position, id, currentNode, handleClick, isDragged }) {\n  return (\n    <g\n      transform={`translate(${position.x},${position.y})`}\n      onMouseDown={(e) => {\n        e.stopPropagation();\n        handleClick(id);\n      }}\n      className='node'\n      style={{ cursor: `${isDragged ? 'move' : ''}` }}\n    >\n      <circle r='20' fill={currentNode === id ? 'turquoise' : 'white'} stroke='black' strokeWidth='4px'></circle>\n      <text x={-4.5 * (1 + (id >= 9))} className='unselectable' y='5' fill='black'>\n        {Number(id) + 1}\n      </text>\n    </g>\n  );\n}\n","import React from 'react';\n\nexport default function Edge({ id, position, currentEdge, handleClick }) {\n  return (\n    <g\n      onMouseDown={(e) => {\n        e.stopPropagation();\n        handleClick(id);\n      }}\n      className='edge'\n    >\n      <line x1={position.x1} y1={position.y1} x2={position.x2} y2={position.y2} stroke='rgba(0,0,0,0)' strokeWidth='15px' />\n      <line\n        x1={position.x1}\n        y1={position.y1}\n        x2={position.x2}\n        y2={position.y2}\n        stroke={currentEdge === id ? 'blue' : 'black'}\n        strokeWidth='3px'\n      />\n      <text x={(position.x1 + position.x2) / 2} y={(position.y1 + position.y2) / 2} className='unselectable' fill='black'>\n        {1}\n      </text>\n    </g>\n  );\n}\n","import React, { useState, useReducer, useRef } from 'react';\nimport Node from './Node';\nimport Edge from './Edge';\nimport './Canvas.css';\n\nfunction dataReducer(state, event) {\n  switch (event.name) {\n    case 'add-node':\n      return { ...state, nodes: { ...state.nodes, [event.value.id]: event.value.node } };\n    case 'add-edge':\n      return { ...state, edges: { ...state.edges, [event.value.id]: event.value.edge } };\n    case 'delete-node':\n      delete state.nodes[event.value];\n      return state;\n    case 'delete-edge':\n      delete state.edges[event.value];\n      return state;\n    default:\n      throw new Error();\n  }\n}\nexport default function Canvas() {\n  const [graphData, updateGraphData] = useReducer(dataReducer, { nodes: {}, edges: {} });\n  const [currentNode, setCurrentNode] = useState(null);\n  const [currentEdge, setCurrentEdge] = useState(null);\n  const [edgeVector, setEdgeVector] = useState({ x: 0, y: 0 });\n  const numNodes = useRef(0);\n  const numEdges = useRef(0);\n\n  function createNode(posX, posY) {\n    updateGraphData({\n      name: 'add-node',\n      value: { id: numNodes.current++, node: { x: posX, y: posY } },\n    });\n  }\n  function createEdge(first, second) {\n    updateGraphData({\n      name: 'add-edge',\n      value: { id: numEdges.current++, edge: { u: first, v: second, w: 1 } },\n    });\n  }\n  function deleteNode(id) {\n    Object.entries(graphData.edges).forEach((element) => {\n      const key = element[0];\n      const edge = element[1];\n      if (edge.u === id || edge.v === id) deleteEdge(key);\n    });\n    updateGraphData({\n      name: 'delete-node',\n      value: id,\n    });\n  }\n  function deleteEdge(id) {\n    updateGraphData({\n      name: 'delete-edge',\n      value: id,\n    });\n  }\n  function handleClickEdge(id) {\n    setCurrentEdge(id);\n    setCurrentNode(null);\n  }\n  // Drag and drop functionality\n  const dragTimeoutId = useRef('');\n  const [isDragging, setIsDragging] = useState(false);\n\n  function handleMouseUpNode() {\n    if (isDragging) {\n      DropNode();\n    } else {\n      clearTimeout(dragTimeoutId.current);\n    }\n  }\n  function handleClickNode(id) {\n    if (currentNode == null) {\n      setCurrentNode(id);\n      setCurrentEdge(null);\n      dragTimeoutId.current = setTimeout(() => {\n        setIsDragging(true);\n      }, 100);\n    } else {\n      createEdge(currentNode, id);\n      setCurrentNode(null);\n    }\n  }\n  function DragNode(posX, posY) {\n    updateGraphData({\n      name: 'add-node',\n      value: { id: currentNode, node: { x: posX, y: posY } },\n    });\n  }\n  function DropNode() {\n    setCurrentNode(null);\n    setIsDragging(false);\n  }\n  return (\n    <div\n      className='draw-graph'\n      onMouseDown={(event) => {\n        if (currentNode == null) createNode(event.nativeEvent.offsetX, event.nativeEvent.offsetY);\n        else setCurrentNode(null);\n        setCurrentEdge(null);\n      }}\n      onMouseMove={(event) => {\n        if (isDragging) {\n          DragNode(event.nativeEvent.offsetX, event.nativeEvent.offsetY);\n        } else {\n          setEdgeVector({\n            x: event.nativeEvent.offsetX,\n            y: event.nativeEvent.offsetY,\n          });\n        }\n      }}\n      onMouseUp={handleMouseUpNode}\n      onKeyDown={(event) => {\n        console.log(event.code);\n        if (event.code === 'Escape') {\n          setCurrentNode(null);\n          setCurrentEdge(null);\n        }\n        if (event.code === 'Delete') {\n          if (currentEdge != null) deleteEdge(currentEdge);\n          if (currentNode != null) deleteNode(currentNode);\n          setCurrentNode(null);\n          setCurrentEdge(null);\n        }\n      }}\n      tabIndex='0'\n    >\n      <svg style={{ width: '100%', height: '100%' }}>\n        {currentNode != null && isDragging === false && (\n          <line\n            x1={graphData.nodes[currentNode].x}\n            y1={graphData.nodes[currentNode].y}\n            x2={edgeVector.x}\n            y2={edgeVector.y}\n            stroke='black'\n            strokeWidth='3px'\n          />\n        )}\n        {Object.entries(graphData.edges).map((element) => {\n          const idx = element[0];\n          const edge = element[1];\n          return (\n            <Edge\n              key={idx}\n              id={idx}\n              position={{\n                x1: graphData.nodes[edge.u].x,\n                y1: graphData.nodes[edge.u].y,\n                x2: graphData.nodes[edge.v].x,\n                y2: graphData.nodes[edge.v].y,\n              }}\n              currentEdge={currentEdge}\n              handleClick={handleClickEdge}\n            />\n          );\n        })}\n        {Object.entries(graphData.nodes).map((element) => {\n          const idx = element[0];\n          const node = element[1];\n          return (\n            <Node\n              key={idx}\n              id={idx}\n              position={node}\n              handleClick={handleClickNode}\n              currentNode={currentNode}\n              isDragged={isDragging && idx === currentNode}\n            />\n          );\n        })}\n      </svg>\n    </div>\n  );\n}\n","import \"./App.css\";\nimport Canvas from \"./components/Canvas\";\n\nfunction App() {\n  return (\n    <div className='App'>\n      <Canvas />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}