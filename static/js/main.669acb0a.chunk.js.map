{"version":3,"sources":["components/Node.jsx","components/Edge.jsx","components/Canvas.jsx","App.jsx","reportWebVitals.js","index.jsx"],"names":["Node","position","id","currentNode","handleClick","transform","x","y","onMouseDown","e","stopPropagation","className","r","fill","stroke","strokeWidth","Number","Edge","currentEdge","x1","y1","x2","y2","dataReducer","state","event","name","nodes","value","node","edges","edge","Error","Canvas","useReducer","graphData","updateGraphData","useState","setCurrentNode","setCurrentEdge","vector","setVector","numNodes","useRef","numEdges","deleteEdge","handleClickNode","first","second","current","u","v","w","handleClickEdge","posX","posY","nativeEvent","offsetX","offsetY","onMouseMove","onKeyDown","String","code","Object","entries","forEach","element","key","tabIndex","style","width","height","map","idx","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.669acb0a.chunk.js","sourcesContent":["import React from 'react';\n\nexport default function Node({ position, id, currentNode, handleClick }) {\n  return (\n    <g\n      transform={`translate(${position.x},${position.y})`}\n      onMouseDown={(e) => {\n        e.stopPropagation();\n        handleClick(id);\n      }}\n      className='node'\n    >\n      <circle r='20' fill={currentNode === id ? 'yellow' : 'white'} stroke='black' strokeWidth='4px'></circle>\n      <text x={-4.5 * (1 + (id >= 9))} className='unselectable' y='5' fill='black'>\n        {Number(id) + 1}\n      </text>\n    </g>\n  );\n}\n","import React from 'react';\n\nexport default function Edge({ id, position, currentEdge, handleClick }) {\n  return (\n    <g\n      onMouseDown={(e) => {\n        e.stopPropagation();\n        handleClick(id);\n      }}\n      className='edge'\n    >\n      <line x1={position.x1} y1={position.y1} x2={position.x2} y2={position.y2} stroke='rgba(0,0,0,0)' strokeWidth='15px' />\n      <line\n        x1={position.x1}\n        y1={position.y1}\n        x2={position.x2}\n        y2={position.y2}\n        stroke={currentEdge === id ? 'blue' : 'black'}\n        strokeWidth='3px'\n      />\n    </g>\n  );\n}\n","import React, { useState, useReducer, useRef } from 'react';\nimport Node from './Node';\nimport Edge from './Edge';\nimport './Canvas.css';\n\nfunction dataReducer(state, event) {\n  switch (event.name) {\n    case 'add-node':\n      return { ...state, nodes: { ...state.nodes, [event.value.id]: event.value.node } };\n    case 'add-edge':\n      return { ...state, edges: { ...state.edges, [event.value.id]: event.value.edge } };\n    case 'delete-node':\n      delete state.nodes[event.value];\n      return state;\n    case 'delete-edge':\n      delete state.edges[event.value];\n      return state;\n    default:\n      throw new Error();\n  }\n}\nexport default function Canvas() {\n  const [graphData, updateGraphData] = useReducer(dataReducer, { nodes: {}, edges: {} });\n  const [currentNode, setCurrentNode] = useState(null);\n  const [currentEdge, setCurrentEdge] = useState(null);\n  const [vector, setVector] = useState({ x: 0, y: 0 });\n  const numNodes = useRef(0);\n  const numEdges = useRef(0);\n\n  function createNode(posX, posY) {\n    updateGraphData({\n      name: 'add-node',\n      value: { id: numNodes.current++, node: { x: posX, y: posY } },\n    });\n  }\n  function createEdge(first, second) {\n    updateGraphData({\n      name: 'add-edge',\n      value: { id: numEdges.current++, edge: { u: first, v: second, w: 1 } },\n    });\n  }\n  function deleteNode(id) {\n    Object.entries(graphData.edges).forEach((element) => {\n      const key = element[0];\n      const edge = element[1];\n      if (edge.u === id || edge.v === id) deleteEdge(key);\n    });\n    updateGraphData({\n      name: 'delete-node',\n      value: id,\n    });\n  }\n  function deleteEdge(id) {\n    updateGraphData({\n      name: 'delete-edge',\n      value: id,\n    });\n  }\n  function handleClickNode(id) {\n    if (currentNode == null) {\n      setCurrentNode(id);\n      setCurrentEdge(null);\n    } else {\n      createEdge(currentNode, id);\n      setCurrentNode(null);\n    }\n  }\n  function handleClickEdge(id) {\n    setCurrentEdge(id);\n    setCurrentNode(null);\n  }\n  return (\n    <div\n      className='draw-graph'\n      onMouseDown={(event) => {\n        if (currentNode == null) createNode(event.nativeEvent.offsetX, event.nativeEvent.offsetY);\n        else setCurrentNode(null);\n        setCurrentEdge(null);\n      }}\n      onMouseMove={(event) => {\n        setVector({\n          x: event.nativeEvent.offsetX,\n          y: event.nativeEvent.offsetY,\n        });\n      }}\n      onKeyDown={(event) => {\n        if (String(event.code) !== 'Delete') return;\n        if (currentEdge != null) deleteEdge(currentEdge);\n        if (currentNode != null) deleteNode(currentNode);\n        setCurrentNode(null);\n        setCurrentEdge(null);\n      }}\n      tabIndex='0'\n    >\n      <svg style={{ width: '100%', height: '100%' }}>\n        {currentNode != null && (\n          <line\n            x1={graphData.nodes[currentNode].x}\n            y1={graphData.nodes[currentNode].y}\n            x2={vector.x}\n            y2={vector.y}\n            stroke='black'\n            strokeWidth='3px'\n          />\n        )}\n        {Object.entries(graphData.edges).map((element) => {\n          const idx = element[0];\n          const edge = element[1];\n          return (\n            <Edge\n              key={idx}\n              id={idx}\n              position={{\n                x1: graphData.nodes[edge.u].x,\n                y1: graphData.nodes[edge.u].y,\n                x2: graphData.nodes[edge.v].x,\n                y2: graphData.nodes[edge.v].y,\n              }}\n              currentEdge={currentEdge}\n              handleClick={handleClickEdge}\n            />\n          );\n        })}\n        {Object.entries(graphData.nodes).map((element) => {\n          const idx = element[0];\n          const node = element[1];\n          return <Node key={idx} id={idx} position={node} handleClick={handleClickNode} currentNode={currentNode} />;\n        })}\n      </svg>\n    </div>\n  );\n}\n","import \"./App.css\";\nimport Canvas from \"./components/Canvas\";\n\nfunction App() {\n  return (\n    <div className='App'>\n      <Canvas />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}